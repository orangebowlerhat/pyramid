<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
						xmlns="http://www.gtk.org/introspection/core/1.0"
						xmlns:c="http://www.gtk.org/introspection/c/1.0"
						xmlns:doc="http://www.gtk.org/introspection/doc/1.0"
						xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
	<doc:format name="unknown"/>
	<namespace name="cairo"
						 shared-library=""
						 c:identifier-prefixes="cairo"
						 c:symbol-prefixes="cairo">
		<alias name="_bool_t" c:type="cairo_bool_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="102">#cairo_bool_t is used for boolean values. Returns of type
#cairo_bool_t will always be either 0 or 1, but testing against
these values explicitly is not encouraged; just use the
value as a boolean condition.

&lt;informalexample&gt;&lt;programlisting&gt;
 if (cairo_in_stroke (cr, x, y)) {
		 /&lt;!-- --&gt;* do something *&lt;!-- --&gt;/
 }
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
			<source-position filename="cairo.h" line="118"/>
			<type name="gint" c:type="int"/>
		</alias>
		<constant name="COLOR_PALETTE_DEFAULT"
							value="0"
							c:type="CAIRO_COLOR_PALETTE_DEFAULT">
			<source-position filename="cairo.h" line="1511"/>
			<type name="gint" c:type="gint"/>
		</constant>
		<constant name="MIME_TYPE_CCITT_FAX"
							value="image/g3fax"
							c:type="CAIRO_MIME_TYPE_CCITT_FAX">
			<source-position filename="cairo.h" line="2622"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_CCITT_FAX_PARAMS"
							value="application/x-cairo.ccitt.params"
							c:type="CAIRO_MIME_TYPE_CCITT_FAX_PARAMS">
			<source-position filename="cairo.h" line="2623"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_EPS"
							value="application/postscript"
							c:type="CAIRO_MIME_TYPE_EPS">
			<source-position filename="cairo.h" line="2624"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_EPS_PARAMS"
							value="application/x-cairo.eps.params"
							c:type="CAIRO_MIME_TYPE_EPS_PARAMS">
			<source-position filename="cairo.h" line="2625"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_JBIG2"
							value="application/x-cairo.jbig2"
							c:type="CAIRO_MIME_TYPE_JBIG2">
			<source-position filename="cairo.h" line="2619"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_JBIG2_GLOBAL"
							value="application/x-cairo.jbig2-global"
							c:type="CAIRO_MIME_TYPE_JBIG2_GLOBAL">
			<source-position filename="cairo.h" line="2620"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_JBIG2_GLOBAL_ID"
							value="application/x-cairo.jbig2-global-id"
							c:type="CAIRO_MIME_TYPE_JBIG2_GLOBAL_ID">
			<source-position filename="cairo.h" line="2621"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_JP2"
							value="image/jp2"
							c:type="CAIRO_MIME_TYPE_JP2">
			<source-position filename="cairo.h" line="2616"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_JPEG"
							value="image/jpeg"
							c:type="CAIRO_MIME_TYPE_JPEG">
			<source-position filename="cairo.h" line="2614"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_PNG"
							value="image/png"
							c:type="CAIRO_MIME_TYPE_PNG">
			<source-position filename="cairo.h" line="2615"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_UNIQUE_ID"
							value="application/x-cairo.uuid"
							c:type="CAIRO_MIME_TYPE_UNIQUE_ID">
			<source-position filename="cairo.h" line="2618"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="MIME_TYPE_URI"
							value="text/x-uri"
							c:type="CAIRO_MIME_TYPE_URI">
			<source-position filename="cairo.h" line="2617"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="TAG_CONTENT"
							value="cairo.content"
							c:type="CAIRO_TAG_CONTENT">
			<source-position filename="cairo.h" line="1079"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="TAG_CONTENT_REF"
							value="cairo.content_ref"
							c:type="CAIRO_TAG_CONTENT_REF">
			<source-position filename="cairo.h" line="1080"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="TAG_DEST" value="cairo.dest" c:type="CAIRO_TAG_DEST">
			<source-position filename="cairo.h" line="1077"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<constant name="TAG_LINK" value="Link" c:type="CAIRO_TAG_LINK">
			<source-position filename="cairo.h" line="1078"/>
			<type name="utf8" c:type="gchar*"/>
		</constant>
		<function-macro name="VERSION_ENCODE"
										c:identifier="CAIRO_VERSION_ENCODE"
										introspectable="0">
			<source-position filename="cairo.h" line="74"/>
			<parameters>
				<parameter name="major">
				</parameter>
				<parameter name="minor">
				</parameter>
				<parameter name="micro">
				</parameter>
			</parameters>
		</function-macro>
		<function-macro name="VERSION_STRINGIZE"
										c:identifier="CAIRO_VERSION_STRINGIZE"
										introspectable="0">
			<source-position filename="cairo.h" line="84"/>
			<parameters>
				<parameter name="major">
				</parameter>
				<parameter name="minor">
				</parameter>
				<parameter name="micro">
				</parameter>
			</parameters>
		</function-macro>
		<function-macro name="VERSION_STRINGIZE_"
										c:identifier="CAIRO_VERSION_STRINGIZE_"
										introspectable="0">
			<source-position filename="cairo.h" line="82"/>
			<parameters>
				<parameter name="major">
				</parameter>
				<parameter name="minor">
				</parameter>
				<parameter name="micro">
				</parameter>
			</parameters>
		</function-macro>
		<enumeration name="_antialias_t" version="1.0" c:type="cairo_antialias_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="721">Specifies the type of antialiasing to do when rendering text or shapes.

As it is not necessarily clear from the above what advantages a particular
antialias method provides, since 1.12, there is also a set of hints:
These make no guarantee on how the backend will perform its rasterisation
(if it even rasterises!), nor that they have any differing effect other
than to enable some form of antialiasing. In the case of glyph rendering,
@CAIRO_ANTIALIAS_FAST and @CAIRO_ANTIALIAS_GOOD will be mapped to
@CAIRO_ANTIALIAS_GRAY, with @CAIRO_ANTALIAS_BEST being equivalent to
@CAIRO_ANTIALIAS_SUBPIXEL.

The interpretation of @CAIRO_ANTIALIAS_DEFAULT is left entirely up to
the backend, typically this will be similar to @CAIRO_ANTIALIAS_GOOD.</doc>
			<source-position filename="cairo.h" line="770"/>
			<member name="default" value="0" c:identifier="CAIRO_ANTIALIAS_DEFAULT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="723">Use the default antialiasing for
	the subsystem and target device, since 1.0</doc>
			</member>
			<member name="none" value="1" c:identifier="CAIRO_ANTIALIAS_NONE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="725">Use a bilevel alpha mask, since 1.0</doc>
			</member>
			<member name="gray" value="2" c:identifier="CAIRO_ANTIALIAS_GRAY">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="726">Perform single-color antialiasing (using
 shades of gray for black text on a white background, for example), since 1.0</doc>
			</member>
			<member name="subpixel"
							value="3"
							c:identifier="CAIRO_ANTIALIAS_SUBPIXEL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="728">Perform antialiasing by taking
 advantage of the order of subpixel elements on devices
 such as LCD panels, since 1.0</doc>
			</member>
			<member name="fast" value="4" c:identifier="CAIRO_ANTIALIAS_FAST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="742">Allow the backend to degrade raster quality for speed</doc>
			</member>
			<member name="good" value="5" c:identifier="CAIRO_ANTIALIAS_GOOD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="743">A balance between speed and quality</doc>
			</member>
			<member name="best" value="6" c:identifier="CAIRO_ANTIALIAS_BEST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="744">A high-fidelity, but potentially slow, raster mode</doc>
			</member>
		</enumeration>
		<enumeration name="_color_mode_t"
								 version="1.18"
								 c:type="cairo_color_mode_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1417">Specifies if color fonts are to be rendered using the color
glyphs or outline glyphs. Glyphs that do not have a color
presentation, and non-color fonts are not affected by this font
option.</doc>
			<source-position filename="cairo.h" line="1438"/>
			<member name="default" value="0" c:identifier="CAIRO_COLOR_MODE_DEFAULT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1419">Use the default color mode for
font backend and target device, since 1.18.</doc>
			</member>
			<member name="no_color"
							value="1"
							c:identifier="CAIRO_COLOR_MODE_NO_COLOR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1421">Disable rendering color glyphs. Glyphs are
always rendered as outline glyphs, since 1.18.</doc>
			</member>
			<member name="color" value="2" c:identifier="CAIRO_COLOR_MODE_COLOR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1423">Enable rendering color glyphs. If the font
contains a color presentation for a glyph, and when supported by
the font backend, the glyph will be rendered in color, since 1.18.</doc>
			</member>
		</enumeration>
		<enumeration name="_content_t" version="1.0" c:type="cairo_content_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="376">#cairo_content_t is used to describe the content that a surface will
contain, whether color information, alpha information (translucence
vs. opacity), or both.

Note: The large values here are designed to keep #cairo_content_t
values distinct from #cairo_format_t values so that the
implementation can detect the error if users confuse the two types.</doc>
			<source-position filename="cairo.h" line="396"/>
			<member name="color" value="4096" c:identifier="CAIRO_CONTENT_COLOR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="378">The surface will hold color content only. (Since 1.0)</doc>
			</member>
			<member name="alpha" value="8192" c:identifier="CAIRO_CONTENT_ALPHA">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="379">The surface will hold alpha content only. (Since 1.0)</doc>
			</member>
			<member name="color_alpha"
							value="12288"
							c:identifier="CAIRO_CONTENT_COLOR_ALPHA">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="380">The surface will hold color and alpha content. (Since 1.0)</doc>
			</member>
		</enumeration>
		<record name="_device_t"
						c:type="cairo_device_t"
						disguised="1"
						opaque="1"
						version="1.10">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="166">A #cairo_device_t represents the driver interface for drawing
operations to a #cairo_surface_t.  There are different subtypes of
#cairo_device_t for different drawing backends.

The type of a device can be queried with cairo_device_get_type().

Memory management of #cairo_device_t is done with
cairo_device_reference() and cairo_device_destroy().</doc>
			<source-position filename="cairo.h" line="180"/>
		</record>
		<enumeration name="_device_type_t"
								 version="1.10"
								 c:type="cairo_device_type_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2277">#cairo_device_type_t is used to describe the type of a given
device. The devices types are also known as "backends" within cairo.

The device type can be queried with cairo_device_get_type()

The various #cairo_device_t functions can be used with devices of
any type, but some backends also provide type-specific functions
that must only be called with a device of the appropriate
type. These functions have names that begin with
&lt;literal&gt;cairo_&lt;emphasis&gt;type&lt;/emphasis&gt;_device&lt;/literal&gt; such as
cairo_xcb_device_debug_cap_xrender_version().

The behavior of calling a type-specific function with a device of
the wrong type is undefined.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="2319"/>
			<member name="drm" value="0" c:identifier="CAIRO_DEVICE_TYPE_DRM">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2279">The device is of type Direct Render Manager, since 1.10</doc>
			</member>
			<member name="gl" value="1" c:identifier="CAIRO_DEVICE_TYPE_GL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2280">The device is of type OpenGL, since 1.10</doc>
			</member>
			<member name="script" value="2" c:identifier="CAIRO_DEVICE_TYPE_SCRIPT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2281">The device is of type script, since 1.10</doc>
			</member>
			<member name="xcb" value="3" c:identifier="CAIRO_DEVICE_TYPE_XCB">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2282">The device is of type xcb, since 1.10</doc>
			</member>
			<member name="xlib" value="4" c:identifier="CAIRO_DEVICE_TYPE_XLIB">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2283">The device is of type xlib, since 1.10</doc>
			</member>
			<member name="xml" value="5" c:identifier="CAIRO_DEVICE_TYPE_XML">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2284">The device is of type XML, since 1.10</doc>
			</member>
			<member name="cogl" value="6" c:identifier="CAIRO_DEVICE_TYPE_COGL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2285">The device is of type cogl, since 1.12</doc>
			</member>
			<member name="win32" value="7" c:identifier="CAIRO_DEVICE_TYPE_WIN32">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2286">The device is of type win32, since 1.12</doc>
			</member>
			<member name="invalid"
							value="-1"
							c:identifier="CAIRO_DEVICE_TYPE_INVALID">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2287">The device is invalid, since 1.10</doc>
			</member>
		</enumeration>
		<enumeration name="_dither_t" version="1.18" c:type="cairo_dither_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="443">Dither is an intentionally applied form of noise used to randomize
quantization error, preventing large-scale patterns such as color banding
in images (e.g. for gradients). Ordered dithering applies a precomputed
threshold matrix to spread the errors smoothly.

 #cairo_dither_t is modeled on pixman dithering algorithm choice.
As of Pixman 0.40, FAST corresponds to a 8x8 ordered bayer noise and GOOD
and BEST use an ordered 64x64 precomputed blue noise.</doc>
			<source-position filename="cairo.h" line="468"/>
			<member name="none" value="0" c:identifier="CAIRO_DITHER_NONE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="445">No dithering.</doc>
			</member>
			<member name="default" value="1" c:identifier="CAIRO_DITHER_DEFAULT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="446">Default choice at cairo compile time. Currently NONE.</doc>
			</member>
			<member name="fast" value="2" c:identifier="CAIRO_DITHER_FAST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="447">Fastest dithering algorithm supported by the backend</doc>
			</member>
			<member name="good" value="3" c:identifier="CAIRO_DITHER_GOOD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="448">An algorithm with smoother dithering than FAST</doc>
			</member>
			<member name="best" value="4" c:identifier="CAIRO_DITHER_BEST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="449">Best algorithm available in the backend</doc>
			</member>
		</enumeration>
		<enumeration name="_extend_t" version="1.0" c:type="cairo_extend_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="3057">#cairo_extend_t is used to describe how pattern color/alpha will be
determined for areas "outside" the pattern's natural area, (for
example, outside the surface bounds or outside the gradient
geometry).

Mesh patterns are not affected by the extend mode.

The default extend mode is %CAIRO_EXTEND_NONE for surface patterns
and %CAIRO_EXTEND_PAD for gradient patterns.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="3087"/>
			<member name="none" value="0" c:identifier="CAIRO_EXTEND_NONE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3059">pixels outside of the source pattern
	are fully transparent (Since 1.0)</doc>
			</member>
			<member name="repeat" value="1" c:identifier="CAIRO_EXTEND_REPEAT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3061">the pattern is tiled by repeating (Since 1.0)</doc>
			</member>
			<member name="reflect" value="2" c:identifier="CAIRO_EXTEND_REFLECT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3062">the pattern is tiled by reflecting
	at the edges (Since 1.0; but only implemented for surface patterns since 1.6)</doc>
			</member>
			<member name="pad" value="3" c:identifier="CAIRO_EXTEND_PAD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3064">pixels outside of the pattern copy
	the closest pixel from the source (Since 1.2; but only
	implemented for surface patterns since 1.6)</doc>
			</member>
		</enumeration>
		<enumeration name="_fill_rule_t" version="1.0" c:type="cairo_fill_rule_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="775">#cairo_fill_rule_t is used to select how paths are filled. For both
fill rules, whether or not a point is included in the fill is
determined by taking a ray from that point to infinity and looking
at intersections with the path. The ray can be in any direction,
as long as it doesn't pass through the end point of a segment
or have a tricky intersection such as intersecting tangent to the path.
(Note that filling is not actually implemented in this way. This
is just a description of the rule that is applied.)

The default fill rule is %CAIRO_FILL_RULE_WINDING.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="805"/>
			<member name="winding" value="0" c:identifier="CAIRO_FILL_RULE_WINDING">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="777">If the path crosses the ray from
left-to-right, counts +1. If the path crosses the ray
from right to left, counts -1. (Left and right are determined
from the perspective of looking along the ray from the starting
point.) If the total count is non-zero, the point will be filled. (Since 1.0)</doc>
			</member>
			<member name="even_odd"
							value="1"
							c:identifier="CAIRO_FILL_RULE_EVEN_ODD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="782">Counts the total number of
intersections, without regard to the orientation of the contour. If
the total number of intersections is odd, the point will be
filled. (Since 1.0)</doc>
			</member>
		</enumeration>
		<enumeration name="_filter_t" version="1.0" c:type="cairo_filter_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="3095">#cairo_filter_t is used to indicate what filtering should be
applied when reading pixel values from patterns. See
cairo_pattern_set_filter() for indicating the desired filter to be
used with a particular pattern.</doc>
			<source-position filename="cairo.h" line="3122"/>
			<member name="fast" value="0" c:identifier="CAIRO_FILTER_FAST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3097">A high-performance filter, with quality similar
		to %CAIRO_FILTER_NEAREST (Since 1.0)</doc>
			</member>
			<member name="good" value="1" c:identifier="CAIRO_FILTER_GOOD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3099">A reasonable-performance filter, with quality
		similar to %CAIRO_FILTER_BILINEAR (Since 1.0)</doc>
			</member>
			<member name="best" value="2" c:identifier="CAIRO_FILTER_BEST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3101">The highest-quality available, performance may
		not be suitable for interactive use. (Since 1.0)</doc>
			</member>
			<member name="nearest" value="3" c:identifier="CAIRO_FILTER_NEAREST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3103">Nearest-neighbor filtering (Since 1.0)</doc>
			</member>
			<member name="bilinear" value="4" c:identifier="CAIRO_FILTER_BILINEAR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3104">Linear interpolation in two dimensions (Since 1.0)</doc>
			</member>
			<member name="gaussian" value="5" c:identifier="CAIRO_FILTER_GAUSSIAN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3105">This filter value is currently
		unimplemented, and should not be used in current code. (Since 1.0)</doc>
			</member>
		</enumeration>
		<record name="_font_extents_t" c:type="cairo_font_extents_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1256">The #cairo_font_extents_t structure stores metric information for
a font. Values are given in the current user-space coordinate
system.

Because font metrics are in user-space coordinates, they are
mostly, but not entirely, independent of the current transformation
matrix. If you call &lt;literal&gt;cairo_scale(cr, 2.0, 2.0)&lt;/literal&gt;,
text will be drawn twice as big, but the reported text extents will
not be doubled. They will change slightly due to hinting (so you
can't assume that metrics are independent of the transformation
matrix), but otherwise will remain unchanged.</doc>
			<source-position filename="cairo.h" line="1305"/>
			<field name="ascent" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1258">the distance that the font extends above the baseline.
				 Note that this is not always exactly equal to the maximum
				 of the extents of all the glyphs in the font, but rather
				 is picked to express the font designer's intent as to
				 how the font should align with elements above it.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="descent" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1263">the distance that the font extends below the baseline.
					This value is positive for typical fonts that include
					portions below the baseline. Note that this is not always
					exactly equal to the maximum of the extents of all the
					glyphs in the font, but rather is picked to express the
					font designer's intent as to how the font should
					align with elements below it.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="height" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1270">the recommended vertical distance between baselines when
				 setting consecutive lines of text with the font. This
				 is greater than @ascent+@descent by a
				 quantity known as the &lt;firstterm&gt;line spacing&lt;/firstterm&gt;
				 or &lt;firstterm&gt;external leading&lt;/firstterm&gt;. When space
				 is at a premium, most fonts can be set with only
				 a distance of @ascent+@descent between lines.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="max_x_advance" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1277">the maximum distance in the X direction that
				the origin is advanced for any glyph in the font.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="max_y_advance" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1279">the maximum distance in the Y direction that
				the origin is advanced for any glyph in the font.
				This will be zero for normal fonts used for horizontal
				writing. (The scripts of East Asia are sometimes written
				vertically.)</doc>
				<type name="gdouble" c:type="double"/>
			</field>
		</record>
		<record name="_font_face_t"
						c:type="cairo_font_face_t"
						disguised="1"
						opaque="1"
						version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1115">A #cairo_font_face_t specifies all aspects of a font other
than the size or font matrix (a font matrix is used to distort
a font by shearing it or scaling it unequally in the two
directions) . A font face can be set on a #cairo_t by using
cairo_set_font_face(); the size and font matrix are set with
cairo_set_font_size() and cairo_set_font_matrix().

There are various types of font faces, depending on the
&lt;firstterm&gt;font backend&lt;/firstterm&gt; they use. The type of a
font face can be queried using cairo_font_face_get_type().

Memory management of #cairo_font_face_t is done with
cairo_font_face_reference() and cairo_font_face_destroy().</doc>
			<source-position filename="cairo.h" line="1134"/>
		</record>
		<record name="_font_options_t"
						c:type="cairo_font_options_t"
						disguised="1"
						opaque="1"
						version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1440">An opaque structure holding all options that are used when
rendering fonts.

Individual features of a #cairo_font_options_t can be set or
accessed using functions named
&lt;function&gt;cairo_font_options_set_&lt;emphasis&gt;feature_name&lt;/emphasis&gt;()&lt;/function&gt; and
&lt;function&gt;cairo_font_options_get_&lt;emphasis&gt;feature_name&lt;/emphasis&gt;()&lt;/function&gt;, like
cairo_font_options_set_antialias() and
cairo_font_options_get_antialias().

New features may be added to a #cairo_font_options_t in the
future.  For this reason, cairo_font_options_copy(),
cairo_font_options_equal(), cairo_font_options_merge(), and
cairo_font_options_hash() should be used to copy, check
for equality, merge, or compute a hash value of
#cairo_font_options_t objects.</doc>
			<source-position filename="cairo.h" line="1462"/>
		</record>
		<enumeration name="_font_slant_t"
								 version="1.0"
								 c:type="cairo_font_slant_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1307">Specifies variants of a font face based on their slant.</doc>
			<source-position filename="cairo.h" line="1321"/>
			<member name="normal" value="0" c:identifier="CAIRO_FONT_SLANT_NORMAL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1309">Upright font style, since 1.0</doc>
			</member>
			<member name="italic" value="1" c:identifier="CAIRO_FONT_SLANT_ITALIC">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1310">Italic font style, since 1.0</doc>
			</member>
			<member name="oblique" value="2" c:identifier="CAIRO_FONT_SLANT_OBLIQUE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1311">Oblique font style, since 1.0</doc>
			</member>
		</enumeration>
		<enumeration name="_font_type_t" version="1.2" c:type="cairo_font_type_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1638">#cairo_font_type_t is used to describe the type of a given font
face or scaled font. The font types are also known as "font
backends" within cairo.

The type of a font face is determined by the function used to
create it, which will generally be of the form
&lt;function&gt;cairo_&lt;emphasis&gt;type&lt;/emphasis&gt;_font_face_create(&lt;!-- --&gt;)&lt;/function&gt;.
The font face type can be queried with cairo_font_face_get_type()

The various #cairo_font_face_t functions can be used with a font face
of any type.

The type of a scaled font is determined by the type of the font
face passed to cairo_scaled_font_create(). The scaled font type can
be queried with cairo_scaled_font_get_type()

The various #cairo_scaled_font_t functions can be used with scaled
fonts of any type, but some font backends also provide
type-specific functions that must only be called with a scaled font
of the appropriate type. These functions have names that begin with
&lt;function&gt;cairo_&lt;emphasis&gt;type&lt;/emphasis&gt;_scaled_font(&lt;!-- --&gt;)&lt;/function&gt;
such as cairo_ft_scaled_font_lock_face().

The behavior of calling a type-specific function with a scaled font
of the wrong type is undefined.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="1685"/>
			<member name="toy" value="0" c:identifier="CAIRO_FONT_TYPE_TOY">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1640">The font was created using cairo's toy font api (Since: 1.2)</doc>
			</member>
			<member name="ft" value="1" c:identifier="CAIRO_FONT_TYPE_FT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1641">The font is of type FreeType (Since: 1.2)</doc>
			</member>
			<member name="win32" value="2" c:identifier="CAIRO_FONT_TYPE_WIN32">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1642">The font is of type Win32 (Since: 1.2)</doc>
			</member>
			<member name="quartz" value="3" c:identifier="CAIRO_FONT_TYPE_QUARTZ">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1643">The font is of type Quartz (Since: 1.6, in 1.2 and
1.4 it was named CAIRO_FONT_TYPE_ATSUI)</doc>
			</member>
			<member name="user" value="4" c:identifier="CAIRO_FONT_TYPE_USER">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1645">The font was create using cairo's user font api (Since: 1.8)</doc>
			</member>
			<member name="dwrite" value="5" c:identifier="CAIRO_FONT_TYPE_DWRITE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1646">The font is of type Win32 DWrite (Since: 1.18)</doc>
			</member>
		</enumeration>
		<enumeration name="_font_weight_t"
								 version="1.0"
								 c:type="cairo_font_weight_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1323">Specifies variants of a font face based on their weight.</doc>
			<source-position filename="cairo.h" line="1335"/>
			<member name="normal" value="0" c:identifier="CAIRO_FONT_WEIGHT_NORMAL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1325">Normal font weight, since 1.0</doc>
			</member>
			<member name="bold" value="1" c:identifier="CAIRO_FONT_WEIGHT_BOLD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1326">Bold font weight, since 1.0</doc>
			</member>
		</enumeration>
		<enumeration name="_format_t" version="1.0" c:type="cairo_format_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="398">#cairo_format_t is used to identify the memory format of
image data.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="441"/>
			<member name="invalid" value="-1" c:identifier="CAIRO_FORMAT_INVALID">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="400">no such format exists or is supported.</doc>
			</member>
			<member name="argb32" value="0" c:identifier="CAIRO_FORMAT_ARGB32">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="401">each pixel is a 32-bit quantity, with
	alpha in the upper 8 bits, then red, then green, then blue.
	The 32-bit quantities are stored native-endian. Pre-multiplied
	alpha is used. (That is, 50% transparent red is 0x80800000,
	not 0x80ff0000.) (Since 1.0)</doc>
			</member>
			<member name="rgb24" value="1" c:identifier="CAIRO_FORMAT_RGB24">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="406">each pixel is a 32-bit quantity, with
	the upper 8 bits unused. Red, Green, and Blue are stored
	in the remaining 24 bits in that order. (Since 1.0)</doc>
			</member>
			<member name="a8" value="2" c:identifier="CAIRO_FORMAT_A8">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="409">each pixel is a 8-bit quantity holding
	an alpha value. (Since 1.0)</doc>
			</member>
			<member name="a1" value="3" c:identifier="CAIRO_FORMAT_A1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="411">each pixel is a 1-bit quantity holding
	an alpha value. Pixels are packed together into 32-bit
	quantities. The ordering of the bits matches the
	endianness of the platform. On a big-endian machine, the
	first pixel is in the uppermost bit, on a little-endian
	machine the first pixel is in the least-significant bit. (Since 1.0)</doc>
			</member>
			<member name="rgb16_565" value="4" c:identifier="CAIRO_FORMAT_RGB16_565">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="417">each pixel is a 16-bit quantity
	with red in the upper 5 bits, then green in the middle
	6 bits, and blue in the lower 5 bits. (Since 1.2)</doc>
			</member>
			<member name="rgb30" value="5" c:identifier="CAIRO_FORMAT_RGB30">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="420">like RGB24 but with 10bpc. (Since 1.12)</doc>
			</member>
			<member name="rgb96f" value="6" c:identifier="CAIRO_FORMAT_RGB96F">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="421">3 floats, R, G, B. (Since 1.17.2)</doc>
			</member>
			<member name="rgba128f" value="7" c:identifier="CAIRO_FORMAT_RGBA128F">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="422">4 floats, R, G, B, A. (Since 1.17.2)</doc>
			</member>
		</enumeration>
		<record name="_glyph_t" c:type="cairo_glyph_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1136">The #cairo_glyph_t structure holds information about a single glyph
when drawing or measuring text. A font is (in simple terms) a
collection of shapes used to draw text. A glyph is one of these
shapes. There can be multiple glyphs for a single character
(alternates to be used in different contexts, for example), or a
glyph can be a &lt;firstterm&gt;ligature&lt;/firstterm&gt; of multiple
characters. Cairo doesn't expose any way of converting input text
into glyphs, so in order to use the Cairo interfaces that take
arrays of glyphs, you must directly access the appropriate
underlying font system.

Note that the offsets given by @x and @y are not cumulative. When
drawing or measuring text, each glyph is individually positioned
with respect to the overall origin</doc>
			<source-position filename="cairo.h" line="1166"/>
			<field name="index" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1138">glyph index in the font. The exact interpretation of the
		 glyph index depends on the font technology being used.</doc>
				<type name="gulong" c:type="unsigned long"/>
			</field>
			<field name="x" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1140">the offset in the X direction between the origin used for
		drawing or measuring the string and the origin of this glyph.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="y" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1142">the offset in the Y direction between the origin used for
		drawing or measuring the string and the origin of this glyph.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
		</record>
		<enumeration name="_hint_metrics_t"
								 version="1.0"
								 c:type="cairo_hint_metrics_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1396">Specifies whether to hint font metrics; hinting font metrics
means quantizing them so that they are integer values in
device space. Doing this improves the consistency of
letter and line spacing, however it also means that text
will be laid out differently at different zoom factors.</doc>
			<source-position filename="cairo.h" line="1415"/>
			<member name="default"
							value="0"
							c:identifier="CAIRO_HINT_METRICS_DEFAULT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1398">Hint metrics in the default
 manner for the font backend and target device, since 1.0</doc>
			</member>
			<member name="off" value="1" c:identifier="CAIRO_HINT_METRICS_OFF">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1400">Do not hint font metrics, since 1.0</doc>
			</member>
			<member name="on" value="2" c:identifier="CAIRO_HINT_METRICS_ON">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1401">Hint font metrics, since 1.0</doc>
			</member>
		</enumeration>
		<enumeration name="_hint_style_t"
								 version="1.0"
								 c:type="cairo_hint_style_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1364">Specifies the type of hinting to do on font outlines. Hinting
is the process of fitting outlines to the pixel grid in order
to improve the appearance of the result. Since hinting outlines
involves distorting them, it also reduces the faithfulness
to the original outline shapes. Not all of the outline hinting
styles are supported by all font backends.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="1394"/>
			<member name="default" value="0" c:identifier="CAIRO_HINT_STYLE_DEFAULT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1366">Use the default hint style for
	font backend and target device, since 1.0</doc>
			</member>
			<member name="none" value="1" c:identifier="CAIRO_HINT_STYLE_NONE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1368">Do not hint outlines, since 1.0</doc>
			</member>
			<member name="slight" value="2" c:identifier="CAIRO_HINT_STYLE_SLIGHT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1369">Hint outlines slightly to improve
	contrast while retaining good fidelity to the original
	shapes, since 1.0</doc>
			</member>
			<member name="medium" value="3" c:identifier="CAIRO_HINT_STYLE_MEDIUM">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1372">Hint outlines with medium strength
	giving a compromise between fidelity to the original shapes
	and contrast, since 1.0</doc>
			</member>
			<member name="full" value="4" c:identifier="CAIRO_HINT_STYLE_FULL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1375">Hint outlines to maximize contrast, since 1.0</doc>
			</member>
		</enumeration>
		<enumeration name="_line_cap_t" version="1.0" c:type="cairo_line_cap_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="816">Specifies how to render the endpoints of the path when stroking.

The default line cap style is %CAIRO_LINE_CAP_BUTT.</doc>
			<source-position filename="cairo.h" line="832"/>
			<member name="butt" value="0" c:identifier="CAIRO_LINE_CAP_BUTT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="818">start(stop) the line exactly at the start(end) point (Since 1.0)</doc>
			</member>
			<member name="round" value="1" c:identifier="CAIRO_LINE_CAP_ROUND">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="819">use a round ending, the center of the circle is the end point (Since 1.0)</doc>
			</member>
			<member name="square" value="2" c:identifier="CAIRO_LINE_CAP_SQUARE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="820">use squared ending, the center of the square is the end point (Since 1.0)</doc>
			</member>
		</enumeration>
		<enumeration name="_line_join_t" version="1.0" c:type="cairo_line_join_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="837">Specifies how to render the junction of two lines when stroking.

The default line join style is %CAIRO_LINE_JOIN_MITER.</doc>
			<source-position filename="cairo.h" line="856"/>
			<member name="miter" value="0" c:identifier="CAIRO_LINE_JOIN_MITER">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="839">use a sharp (angled) corner, see
cairo_set_miter_limit() (Since 1.0)</doc>
			</member>
			<member name="round" value="1" c:identifier="CAIRO_LINE_JOIN_ROUND">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="841">use a rounded join, the center of the circle is the
joint point (Since 1.0)</doc>
			</member>
			<member name="bevel" value="2" c:identifier="CAIRO_LINE_JOIN_BEVEL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="843">use a cut-off join, the join is cut off at half
the line width from the joint point (Since 1.0)</doc>
			</member>
		</enumeration>
		<record name="_matrix_t" c:type="cairo_matrix_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="182">A #cairo_matrix_t holds an affine transformation, such as a scale,
rotation, shear, or a combination of those. The transformation of
a point (x, y) is given by:
&lt;programlisting&gt;
		x_new = xx * x + xy * y + x0;
		y_new = yx * x + yy * y + y0;
&lt;/programlisting&gt;</doc>
			<source-position filename="cairo.h" line="205"/>
			<field name="xx" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="184">xx component of the affine transformation</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="yx" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="185">yx component of the affine transformation</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="xy" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="186">xy component of the affine transformation</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="yy" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="187">yy component of the affine transformation</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="x0" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="188">X translation component of the affine transformation</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="y0" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="189">Y translation component of the affine transformation</doc>
				<type name="gdouble" c:type="double"/>
			</field>
		</record>
		<enumeration name="_operator_t" version="1.0" c:type="cairo_operator_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="581">#cairo_operator_t is used to set the compositing operator for all cairo
drawing operations.

The default operator is %CAIRO_OPERATOR_OVER.

The operators marked as &lt;firstterm&gt;unbounded&lt;/firstterm&gt; modify their
destination even outside of the mask layer (that is, their effect is not
bound by the mask layer).  However, their effect can still be limited by
way of clipping.

To keep things simple, the operator descriptions here
document the behavior for when both source and destination are either fully
transparent or fully opaque.  The actual implementation works for
translucent layers too.
For a more detailed explanation of the effects of each operator, including
the mathematical definitions, see
&lt;ulink url="https://cairographics.org/operators/"&gt;https://cairographics.org/operators/&lt;/ulink&gt;.</doc>
			<source-position filename="cairo.h" line="696"/>
			<member name="clear" value="0" c:identifier="CAIRO_OPERATOR_CLEAR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="583">clear destination layer (bounded) (Since 1.0)</doc>
			</member>
			<member name="source" value="1" c:identifier="CAIRO_OPERATOR_SOURCE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="584">replace destination layer (bounded) (Since 1.0)</doc>
			</member>
			<member name="over" value="2" c:identifier="CAIRO_OPERATOR_OVER">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="585">draw source layer on top of destination layer
(bounded) (Since 1.0)</doc>
			</member>
			<member name="in" value="3" c:identifier="CAIRO_OPERATOR_IN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="587">draw source where there was destination content
(unbounded) (Since 1.0)</doc>
			</member>
			<member name="out" value="4" c:identifier="CAIRO_OPERATOR_OUT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="589">draw source where there was no destination
content (unbounded) (Since 1.0)</doc>
			</member>
			<member name="atop" value="5" c:identifier="CAIRO_OPERATOR_ATOP">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="591">draw source on top of destination content and
only there (Since 1.0)</doc>
			</member>
			<member name="dest" value="6" c:identifier="CAIRO_OPERATOR_DEST">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="593">ignore the source (Since 1.0)</doc>
			</member>
			<member name="dest_over"
							value="7"
							c:identifier="CAIRO_OPERATOR_DEST_OVER">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="594">draw destination on top of source (Since 1.0)</doc>
			</member>
			<member name="dest_in" value="8" c:identifier="CAIRO_OPERATOR_DEST_IN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="595">leave destination only where there was
source content (unbounded) (Since 1.0)</doc>
			</member>
			<member name="dest_out" value="9" c:identifier="CAIRO_OPERATOR_DEST_OUT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="597">leave destination only where there was no
source content (Since 1.0)</doc>
			</member>
			<member name="dest_atop"
							value="10"
							c:identifier="CAIRO_OPERATOR_DEST_ATOP">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="599">leave destination on top of source content
and only there (unbounded) (Since 1.0)</doc>
			</member>
			<member name="xor" value="11" c:identifier="CAIRO_OPERATOR_XOR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="601">source and destination are shown where there is only
one of them (Since 1.0)</doc>
			</member>
			<member name="add" value="12" c:identifier="CAIRO_OPERATOR_ADD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="603">source and destination layers are accumulated (Since 1.0)</doc>
			</member>
			<member name="saturate"
							value="13"
							c:identifier="CAIRO_OPERATOR_SATURATE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="604">like over, but assuming source and dest are
disjoint geometries (Since 1.0)</doc>
			</member>
			<member name="multiply"
							value="14"
							c:identifier="CAIRO_OPERATOR_MULTIPLY">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="606">source and destination layers are multiplied.
This causes the result to be at least as dark as the darker inputs. (Since 1.10)</doc>
			</member>
			<member name="screen" value="15" c:identifier="CAIRO_OPERATOR_SCREEN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="608">source and destination are complemented and
multiplied. This causes the result to be at least as light as the lighter
inputs. (Since 1.10)</doc>
			</member>
			<member name="overlay" value="16" c:identifier="CAIRO_OPERATOR_OVERLAY">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="611">multiplies or screens, depending on the
lightness of the destination color. (Since 1.10)</doc>
			</member>
			<member name="darken" value="17" c:identifier="CAIRO_OPERATOR_DARKEN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="613">replaces the destination with the source if it
is darker, otherwise keeps the source. (Since 1.10)</doc>
			</member>
			<member name="lighten" value="18" c:identifier="CAIRO_OPERATOR_LIGHTEN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="615">replaces the destination with the source if it
is lighter, otherwise keeps the source. (Since 1.10)</doc>
			</member>
			<member name="color_dodge"
							value="19"
							c:identifier="CAIRO_OPERATOR_COLOR_DODGE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="617">brightens the destination color to reflect
the source color. (Since 1.10)</doc>
			</member>
			<member name="color_burn"
							value="20"
							c:identifier="CAIRO_OPERATOR_COLOR_BURN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="619">darkens the destination color to reflect
the source color. (Since 1.10)</doc>
			</member>
			<member name="hard_light"
							value="21"
							c:identifier="CAIRO_OPERATOR_HARD_LIGHT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="621">Multiplies or screens, dependent on source
color. (Since 1.10)</doc>
			</member>
			<member name="soft_light"
							value="22"
							c:identifier="CAIRO_OPERATOR_SOFT_LIGHT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="623">Darkens or lightens, dependent on source
color. (Since 1.10)</doc>
			</member>
			<member name="difference"
							value="23"
							c:identifier="CAIRO_OPERATOR_DIFFERENCE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="625">Takes the difference of the source and
destination color. (Since 1.10)</doc>
			</member>
			<member name="exclusion"
							value="24"
							c:identifier="CAIRO_OPERATOR_EXCLUSION">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="627">Produces an effect similar to difference, but
with lower contrast. (Since 1.10)</doc>
			</member>
			<member name="hsl_hue" value="25" c:identifier="CAIRO_OPERATOR_HSL_HUE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="629">Creates a color with the hue of the source
and the saturation and luminosity of the target. (Since 1.10)</doc>
			</member>
			<member name="hsl_saturation"
							value="26"
							c:identifier="CAIRO_OPERATOR_HSL_SATURATION">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="631">Creates a color with the saturation
of the source and the hue and luminosity of the target. Painting with
this mode onto a gray area produces no change. (Since 1.10)</doc>
			</member>
			<member name="hsl_color"
							value="27"
							c:identifier="CAIRO_OPERATOR_HSL_COLOR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="634">Creates a color with the hue and saturation
of the source and the luminosity of the target. This preserves the gray
levels of the target and is useful for coloring monochrome images or
tinting color images. (Since 1.10)</doc>
			</member>
			<member name="hsl_luminosity"
							value="28"
							c:identifier="CAIRO_OPERATOR_HSL_LUMINOSITY">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="638">Creates a color with the luminosity of
the source and the hue and saturation of the target. This produces an
inverse effect to @CAIRO_OPERATOR_HSL_COLOR. (Since 1.10)</doc>
			</member>
		</enumeration>
		<union name="_path_data_t" c:type="cairo_path_data_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2145">#cairo_path_data_t is used to represent the path data inside a
#cairo_path_t.

The data structure is designed to try to balance the demands of
efficiency and ease-of-use. A path is represented as an array of
#cairo_path_data_t, which is a union of headers and points.

Each portion of the path is represented by one or more elements in
the array, (one header followed by 0 or more points). The length
value of the header is the number of array elements for the current
portion including the header, (ie. length == 1 + # of points), and
where the number of points for each element type is as follows:

&lt;programlisting&gt;
		%CAIRO_PATH_MOVE_TO:     1 point
		%CAIRO_PATH_LINE_TO:     1 point
		%CAIRO_PATH_CURVE_TO:    3 points
		%CAIRO_PATH_CLOSE_PATH:  0 points
&lt;/programlisting&gt;

The semantics and ordering of the coordinate values are consistent
with cairo_move_to(), cairo_line_to(), cairo_curve_to(), and
cairo_close_path().

Here is sample code for iterating through a #cairo_path_t:

&lt;informalexample&gt;&lt;programlisting&gt;
		 int i;
		 cairo_path_t *path;
		 cairo_path_data_t *data;
&amp;nbsp;
		 path = cairo_copy_path (cr);
&amp;nbsp;
		 for (i=0; i &lt; path-&gt;num_data; i += path-&gt;data[i].header.length) {
				 data = &amp;amp;path-&gt;data[i];
				 switch (data-&gt;header.type) {
				 case CAIRO_PATH_MOVE_TO:
						 do_move_to_things (data[1].point.x, data[1].point.y);
						 break;
				 case CAIRO_PATH_LINE_TO:
						 do_line_to_things (data[1].point.x, data[1].point.y);
						 break;
				 case CAIRO_PATH_CURVE_TO:
						 do_curve_to_things (data[1].point.x, data[1].point.y,
																 data[2].point.x, data[2].point.y,
																 data[3].point.x, data[3].point.y);
						 break;
				 case CAIRO_PATH_CLOSE_PATH:
						 do_close_path_things ();
						 break;
				 }
		 }
		 cairo_path_destroy (path);
&lt;/programlisting&gt;&lt;/informalexample&gt;

As of cairo 1.4, cairo does not mind if there are more elements in
a portion of the path than needed.  Such elements can be used by
users of the cairo API to hold extra values in the path data
structure.  For this reason, it is recommended that applications
always use &lt;literal&gt;data-&gt;header.length&lt;/literal&gt; to
iterate over the path data, instead of hardcoding the number of
elements for each element type.</doc>
			<source-position filename="cairo.h" line="2222"/>
			<record name="header" c:type="header">
				<source-position filename="cairo.h" line="2218"/>
				<field name="type" writable="1">
					<type name="_path_data_type_t" c:type="cairo_path_data_type_t"/>
				</field>
				<field name="length" writable="1">
					<type name="gint" c:type="int"/>
				</field>
			</record>
			<record name="point" c:type="point">
				<source-position filename="cairo.h" line="2221"/>
				<field name="x" writable="1">
					<type name="gdouble" c:type="double"/>
				</field>
				<field name="y" writable="1">
					<type name="gdouble" c:type="double"/>
				</field>
			</record>
		</union>
		<enumeration name="_path_data_type_t"
								 version="1.0"
								 c:type="cairo_path_data_type_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2125">#cairo_path_data_t is used to describe the type of one portion
of a path when represented as a #cairo_path_t.
See #cairo_path_data_t for details.</doc>
			<source-position filename="cairo.h" line="2143"/>
			<member name="move_to" value="0" c:identifier="CAIRO_PATH_MOVE_TO">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2127">A move-to operation, since 1.0</doc>
			</member>
			<member name="line_to" value="1" c:identifier="CAIRO_PATH_LINE_TO">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2128">A line-to operation, since 1.0</doc>
			</member>
			<member name="curve_to" value="2" c:identifier="CAIRO_PATH_CURVE_TO">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2129">A curve-to operation, since 1.0</doc>
			</member>
			<member name="close_path" value="3" c:identifier="CAIRO_PATH_CLOSE_PATH">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2130">A close-path operation, since 1.0</doc>
			</member>
		</enumeration>
		<record name="_path_t" c:type="cairo_path_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2224">A data structure for holding a path. This data structure serves as
the return value for cairo_copy_path() and
cairo_copy_path_flat() as well the input value for
cairo_append_path().

See #cairo_path_data_t for hints on how to iterate over the
actual data within the path.

The num_data member gives the number of elements in the data
array. This number is larger than the number of independent path
portions (defined in #cairo_path_data_type_t), since the data
includes both headers and coordinates for each portion.</doc>
			<source-position filename="cairo.h" line="2249"/>
			<field name="status" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2226">the current error status</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</field>
			<field name="data" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2227">the elements in the path</doc>
				<type name="_path_data_t" c:type="cairo_path_data_t*"/>
			</field>
			<field name="num_data" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2228">the number of elements in the data array</doc>
				<type name="gint" c:type="int"/>
			</field>
		</record>
		<record name="_pattern_t"
						c:type="cairo_pattern_t"
						disguised="1"
						opaque="1"
						version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="207">A #cairo_pattern_t represents a source when drawing onto a
surface. There are different subtypes of #cairo_pattern_t,
for different types of sources; for example,
cairo_pattern_create_rgb() creates a pattern for a solid
opaque color.

Other than various
&lt;function&gt;cairo_pattern_create_&lt;emphasis&gt;type&lt;/emphasis&gt;()&lt;/function&gt;
functions, some of the pattern types can be implicitly created using various
&lt;function&gt;cairo_set_source_&lt;emphasis&gt;type&lt;/emphasis&gt;()&lt;/function&gt; functions;
for example cairo_set_source_rgb().

The type of a pattern can be queried with cairo_pattern_get_type().

Memory management of #cairo_pattern_t is done with
cairo_pattern_reference() and cairo_pattern_destroy().</doc>
			<source-position filename="cairo.h" line="229"/>
		</record>
		<enumeration name="_pattern_type_t"
								 version="1.2"
								 c:type="cairo_pattern_type_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2958">#cairo_pattern_type_t is used to describe the type of a given pattern.

The type of a pattern is determined by the function used to create
it. The cairo_pattern_create_rgb() and cairo_pattern_create_rgba()
functions create SOLID patterns. The remaining
cairo_pattern_create&lt;!-- --&gt; functions map to pattern types in obvious
ways.

The pattern type can be queried with cairo_pattern_get_type()

Most #cairo_pattern_t functions can be called with a pattern of any
type, (though trying to change the extend or filter for a solid
pattern will have no effect). A notable exception is
cairo_pattern_add_color_stop_rgb() and
cairo_pattern_add_color_stop_rgba() which must only be called with
gradient patterns (either LINEAR or RADIAL). Otherwise the pattern
will be shutdown and put into an error state.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="2997"/>
			<member name="solid" value="0" c:identifier="CAIRO_PATTERN_TYPE_SOLID">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2960">The pattern is a solid (uniform)
color. It may be opaque or translucent, since 1.2.</doc>
			</member>
			<member name="surface"
							value="1"
							c:identifier="CAIRO_PATTERN_TYPE_SURFACE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2962">The pattern is a based on a surface (an image), since 1.2.</doc>
			</member>
			<member name="linear" value="2" c:identifier="CAIRO_PATTERN_TYPE_LINEAR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2963">The pattern is a linear gradient, since 1.2.</doc>
			</member>
			<member name="radial" value="3" c:identifier="CAIRO_PATTERN_TYPE_RADIAL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2964">The pattern is a radial gradient, since 1.2.</doc>
			</member>
			<member name="mesh" value="4" c:identifier="CAIRO_PATTERN_TYPE_MESH">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2965">The pattern is a mesh, since 1.12.</doc>
			</member>
			<member name="raster_source"
							value="5"
							c:identifier="CAIRO_PATTERN_TYPE_RASTER_SOURCE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2966">The pattern is a user pattern providing raster data, since 1.12.</doc>
			</member>
		</enumeration>
		<record name="_rectangle_int_t"
						c:type="cairo_rectangle_int_t"
						version="1.10">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="520">A data structure for holding a rectangle with integer coordinates.</doc>
			<source-position filename="cairo.h" line="535"/>
			<field name="x" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="522">X coordinate of the left side of the rectangle</doc>
				<type name="gint" c:type="int"/>
			</field>
			<field name="y" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="523">Y coordinate of the top side of the rectangle</doc>
				<type name="gint" c:type="int"/>
			</field>
			<field name="width" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="524">width of the rectangle</doc>
				<type name="gint" c:type="int"/>
			</field>
			<field name="height" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="525">height of the rectangle</doc>
				<type name="gint" c:type="int"/>
			</field>
		</record>
		<record name="_rectangle_list_t"
						c:type="cairo_rectangle_list_t"
						version="1.4">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1058">A data structure for holding a dynamically allocated
array of rectangles.</doc>
			<source-position filename="cairo.h" line="1073"/>
			<field name="status" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1060">Error status of the rectangle list</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</field>
			<field name="rectangles" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1061">Array containing the rectangles</doc>
				<type name="_rectangle_t" c:type="cairo_rectangle_t*"/>
			</field>
			<field name="num_rectangles" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1062">Number of rectangles in this list</doc>
				<type name="gint" c:type="int"/>
			</field>
		</record>
		<record name="_rectangle_t" c:type="cairo_rectangle_t" version="1.4">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1043">A data structure for holding a rectangle.</doc>
			<source-position filename="cairo.h" line="1056"/>
			<field name="x" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1045">X coordinate of the left side of the rectangle</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="y" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1046">Y coordinate of the top side of the rectangle</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="width" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1047">width of the rectangle</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="height" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1048">height of the rectangle</doc>
				<type name="gdouble" c:type="double"/>
			</field>
		</record>
		<enumeration name="_region_overlap_t"
								 version="1.10"
								 c:type="cairo_region_overlap_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="3246">Used as the return value for cairo_region_contains_rectangle().</doc>
			<source-position filename="cairo.h" line="3261"/>
			<member name="in" value="0" c:identifier="CAIRO_REGION_OVERLAP_IN">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3248">The contents are entirely inside the region. (Since 1.10)</doc>
			</member>
			<member name="out" value="1" c:identifier="CAIRO_REGION_OVERLAP_OUT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3249">The contents are entirely outside the region. (Since 1.10)</doc>
			</member>
			<member name="part" value="2" c:identifier="CAIRO_REGION_OVERLAP_PART">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="3250">The contents are partially inside and
		partially outside the region. (Since 1.10)</doc>
			</member>
		</enumeration>
		<record name="_region_t"
						c:type="cairo_region_t"
						disguised="1"
						opaque="1"
						version="1.10">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="3231">A #cairo_region_t represents a set of integer-aligned rectangles.

It allows set-theoretical operations like cairo_region_union() and
cairo_region_intersect() to be performed on them.

Memory management of #cairo_region_t is done with
cairo_region_reference() and cairo_region_destroy().</doc>
			<source-position filename="cairo.h" line="3244"/>
		</record>
		<record name="_scaled_font_t"
						c:type="cairo_scaled_font_t"
						disguised="1"
						opaque="1"
						version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1096">A #cairo_scaled_font_t is a font scaled to a particular size and device
resolution. A #cairo_scaled_font_t is most useful for low-level font
usage where a library or application wants to cache a reference
to a scaled font to speed up the computation of metrics.

There are various types of scaled fonts, depending on the
&lt;firstterm&gt;font backend&lt;/firstterm&gt; they use. The type of a
scaled font can be queried using cairo_scaled_font_get_type().

Memory management of #cairo_scaled_font_t is done with
cairo_scaled_font_reference() and cairo_scaled_font_destroy().</doc>
			<source-position filename="cairo.h" line="1113"/>
		</record>
		<enumeration name="_status_t" version="1.0" c:type="cairo_status_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="259">#cairo_status_t is used to indicate errors that can occur when
using Cairo. In some cases it is returned directly by functions.
but when using #cairo_t, the last error, if any, is stored in
the context and can be retrieved with cairo_status().

New entries may be added in future versions.  Use cairo_status_to_string()
to get a human-readable representation of an error message.</doc>
			<source-position filename="cairo.h" line="374"/>
			<member name="success" value="0" c:identifier="CAIRO_STATUS_SUCCESS">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="261">no error has occurred (Since 1.0)</doc>
			</member>
			<member name="no_memory" value="1" c:identifier="CAIRO_STATUS_NO_MEMORY">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="262">out of memory (Since 1.0)</doc>
			</member>
			<member name="invalid_restore"
							value="2"
							c:identifier="CAIRO_STATUS_INVALID_RESTORE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="263">cairo_restore() called without matching cairo_save() (Since 1.0)</doc>
			</member>
			<member name="invalid_pop_group"
							value="3"
							c:identifier="CAIRO_STATUS_INVALID_POP_GROUP">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="264">no saved group to pop, i.e. cairo_pop_group() without matching cairo_push_group() (Since 1.0)</doc>
			</member>
			<member name="no_current_point"
							value="4"
							c:identifier="CAIRO_STATUS_NO_CURRENT_POINT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="265">no current point defined (Since 1.0)</doc>
			</member>
			<member name="invalid_matrix"
							value="5"
							c:identifier="CAIRO_STATUS_INVALID_MATRIX">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="266">invalid matrix (not invertible) (Since 1.0)</doc>
			</member>
			<member name="invalid_status"
							value="6"
							c:identifier="CAIRO_STATUS_INVALID_STATUS">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="267">invalid value for an input #cairo_status_t (Since 1.0)</doc>
			</member>
			<member name="null_pointer"
							value="7"
							c:identifier="CAIRO_STATUS_NULL_POINTER">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="268">%NULL pointer (Since 1.0)</doc>
			</member>
			<member name="invalid_string"
							value="8"
							c:identifier="CAIRO_STATUS_INVALID_STRING">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="269">input string not valid UTF-8 (Since 1.0)</doc>
			</member>
			<member name="invalid_path_data"
							value="9"
							c:identifier="CAIRO_STATUS_INVALID_PATH_DATA">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="270">input path data not valid (Since 1.0)</doc>
			</member>
			<member name="read_error"
							value="10"
							c:identifier="CAIRO_STATUS_READ_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="271">error while reading from input stream (Since 1.0)</doc>
			</member>
			<member name="write_error"
							value="11"
							c:identifier="CAIRO_STATUS_WRITE_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="272">error while writing to output stream (Since 1.0)</doc>
			</member>
			<member name="surface_finished"
							value="12"
							c:identifier="CAIRO_STATUS_SURFACE_FINISHED">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="273">target surface has been finished (Since 1.0)</doc>
			</member>
			<member name="surface_type_mismatch"
							value="13"
							c:identifier="CAIRO_STATUS_SURFACE_TYPE_MISMATCH">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="274">the surface type is not appropriate for the operation (Since 1.0)</doc>
			</member>
			<member name="pattern_type_mismatch"
							value="14"
							c:identifier="CAIRO_STATUS_PATTERN_TYPE_MISMATCH">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="275">the pattern type is not appropriate for the operation (Since 1.0)</doc>
			</member>
			<member name="invalid_content"
							value="15"
							c:identifier="CAIRO_STATUS_INVALID_CONTENT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="276">invalid value for an input #cairo_content_t (Since 1.0)</doc>
			</member>
			<member name="invalid_format"
							value="16"
							c:identifier="CAIRO_STATUS_INVALID_FORMAT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="277">invalid value for an input #cairo_format_t (Since 1.0)</doc>
			</member>
			<member name="invalid_visual"
							value="17"
							c:identifier="CAIRO_STATUS_INVALID_VISUAL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="278">invalid value for an input Visual* (Since 1.0)</doc>
			</member>
			<member name="file_not_found"
							value="18"
							c:identifier="CAIRO_STATUS_FILE_NOT_FOUND">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="279">file not found (Since 1.0)</doc>
			</member>
			<member name="invalid_dash"
							value="19"
							c:identifier="CAIRO_STATUS_INVALID_DASH">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="280">invalid value for a dash setting (Since 1.0)</doc>
			</member>
			<member name="invalid_dsc_comment"
							value="20"
							c:identifier="CAIRO_STATUS_INVALID_DSC_COMMENT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="281">invalid value for a DSC comment (Since 1.2)</doc>
			</member>
			<member name="invalid_index"
							value="21"
							c:identifier="CAIRO_STATUS_INVALID_INDEX">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="282">invalid index passed to getter (Since 1.4)</doc>
			</member>
			<member name="clip_not_representable"
							value="22"
							c:identifier="CAIRO_STATUS_CLIP_NOT_REPRESENTABLE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="283">clip region not representable in desired format (Since 1.4)</doc>
			</member>
			<member name="temp_file_error"
							value="23"
							c:identifier="CAIRO_STATUS_TEMP_FILE_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="284">error creating or writing to a temporary file (Since 1.6)</doc>
			</member>
			<member name="invalid_stride"
							value="24"
							c:identifier="CAIRO_STATUS_INVALID_STRIDE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="285">invalid value for stride (Since 1.6)</doc>
			</member>
			<member name="font_type_mismatch"
							value="25"
							c:identifier="CAIRO_STATUS_FONT_TYPE_MISMATCH">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="286">the font type is not appropriate for the operation (Since 1.8)</doc>
			</member>
			<member name="user_font_immutable"
							value="26"
							c:identifier="CAIRO_STATUS_USER_FONT_IMMUTABLE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="287">the user-font is immutable (Since 1.8)</doc>
			</member>
			<member name="user_font_error"
							value="27"
							c:identifier="CAIRO_STATUS_USER_FONT_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="288">error occurred in a user-font callback function (Since 1.8)</doc>
			</member>
			<member name="negative_count"
							value="28"
							c:identifier="CAIRO_STATUS_NEGATIVE_COUNT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="289">negative number used where it is not allowed (Since 1.8)</doc>
			</member>
			<member name="invalid_clusters"
							value="29"
							c:identifier="CAIRO_STATUS_INVALID_CLUSTERS">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="290">input clusters do not represent the accompanying text and glyph array (Since 1.8)</doc>
			</member>
			<member name="invalid_slant"
							value="30"
							c:identifier="CAIRO_STATUS_INVALID_SLANT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="291">invalid value for an input #cairo_font_slant_t (Since 1.8)</doc>
			</member>
			<member name="invalid_weight"
							value="31"
							c:identifier="CAIRO_STATUS_INVALID_WEIGHT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="292">invalid value for an input #cairo_font_weight_t (Since 1.8)</doc>
			</member>
			<member name="invalid_size"
							value="32"
							c:identifier="CAIRO_STATUS_INVALID_SIZE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="293">invalid value (typically too big) for the size of the input (surface, pattern, etc.) (Since 1.10)</doc>
			</member>
			<member name="user_font_not_implemented"
							value="33"
							c:identifier="CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="294">user-font method not implemented (Since 1.10)</doc>
			</member>
			<member name="device_type_mismatch"
							value="34"
							c:identifier="CAIRO_STATUS_DEVICE_TYPE_MISMATCH">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="295">the device type is not appropriate for the operation (Since 1.10)</doc>
			</member>
			<member name="device_error"
							value="35"
							c:identifier="CAIRO_STATUS_DEVICE_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="296">an operation to the device caused an unspecified error (Since 1.10)</doc>
			</member>
			<member name="invalid_mesh_construction"
							value="36"
							c:identifier="CAIRO_STATUS_INVALID_MESH_CONSTRUCTION">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="297">a mesh pattern
	construction operation was used outside of a
	cairo_mesh_pattern_begin_patch()/cairo_mesh_pattern_end_patch()
	pair (Since 1.12)</doc>
			</member>
			<member name="device_finished"
							value="37"
							c:identifier="CAIRO_STATUS_DEVICE_FINISHED">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="301">target device has been finished (Since 1.12)</doc>
			</member>
			<member name="jbig2_global_missing"
							value="38"
							c:identifier="CAIRO_STATUS_JBIG2_GLOBAL_MISSING">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="302">%CAIRO_MIME_TYPE_JBIG2_GLOBAL_ID has been used on at least one image
	but no image provided %CAIRO_MIME_TYPE_JBIG2_GLOBAL (Since 1.14)</doc>
			</member>
			<member name="png_error"
							value="39"
							c:identifier="CAIRO_STATUS_PNG_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="304">error occurred in libpng while reading from or writing to a PNG file (Since 1.16)</doc>
			</member>
			<member name="freetype_error"
							value="40"
							c:identifier="CAIRO_STATUS_FREETYPE_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="305">error occurred in libfreetype (Since 1.16)</doc>
			</member>
			<member name="win32_gdi_error"
							value="41"
							c:identifier="CAIRO_STATUS_WIN32_GDI_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="306">error occurred in the Windows Graphics Device Interface (Since 1.16)</doc>
			</member>
			<member name="tag_error"
							value="42"
							c:identifier="CAIRO_STATUS_TAG_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="307">invalid tag name, attributes, or nesting (Since 1.16)</doc>
			</member>
			<member name="dwrite_error"
							value="43"
							c:identifier="CAIRO_STATUS_DWRITE_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="308">error occurred in the Windows Direct Write API (Since 1.18)</doc>
			</member>
			<member name="svg_font_error"
							value="44"
							c:identifier="CAIRO_STATUS_SVG_FONT_ERROR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="309">error occurred in OpenType-SVG font rendering (Since 1.18)</doc>
			</member>
			<member name="last_status"
							value="45"
							c:identifier="CAIRO_STATUS_LAST_STATUS">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="310">this is a special value indicating the number of
	status values defined in this enumeration.  When using this value, note
	that the version of cairo at run-time may have additional status values
	defined than the value of this symbol at compile-time. (Since 1.10)</doc>
			</member>
		</enumeration>
		<enumeration name="_subpixel_order_t"
								 version="1.0"
								 c:type="cairo_subpixel_order_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1337">The subpixel order specifies the order of color elements within
each pixel on the display device when rendering with an
antialiasing mode of %CAIRO_ANTIALIAS_SUBPIXEL.</doc>
			<source-position filename="cairo.h" line="1362"/>
			<member name="default"
							value="0"
							c:identifier="CAIRO_SUBPIXEL_ORDER_DEFAULT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1339">Use the default subpixel order for
	for the target device, since 1.0</doc>
			</member>
			<member name="rgb" value="1" c:identifier="CAIRO_SUBPIXEL_ORDER_RGB">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1341">Subpixel elements are arranged horizontally
	with red at the left, since 1.0</doc>
			</member>
			<member name="bgr" value="2" c:identifier="CAIRO_SUBPIXEL_ORDER_BGR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1343">Subpixel elements are arranged horizontally
	with blue at the left, since 1.0</doc>
			</member>
			<member name="vrgb" value="3" c:identifier="CAIRO_SUBPIXEL_ORDER_VRGB">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1345">Subpixel elements are arranged vertically
	with red at the top, since 1.0</doc>
			</member>
			<member name="vbgr" value="4" c:identifier="CAIRO_SUBPIXEL_ORDER_VBGR">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1347">Subpixel elements are arranged vertically
	with blue at the top, since 1.0</doc>
			</member>
		</enumeration>
		<enumeration name="_surface_observer_mode_t"
								 version="1.12"
								 c:type="cairo_surface_observer_mode_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2385">Whether operations should be recorded.</doc>
			<source-position filename="cairo.h" line="2397"/>
			<member name="normal"
							value="0"
							c:identifier="CAIRO_SURFACE_OBSERVER_NORMAL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2387">no recording is done</doc>
			</member>
			<member name="record_operations"
							value="1"
							c:identifier="CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2388">operations are recorded</doc>
			</member>
		</enumeration>
		<record name="_surface_t"
						c:type="cairo_surface_t"
						disguised="1"
						opaque="1"
						version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="137">A #cairo_surface_t represents an image, either as the destination
of a drawing operation or as source when drawing onto another
surface.  To draw to a #cairo_surface_t, create a cairo context
with the surface as the target, using cairo_create().

There are different subtypes of #cairo_surface_t for
different drawing backends; for example, cairo_image_surface_create()
creates a bitmap image in memory.
The type of a surface can be queried with cairo_surface_get_type().

The initial contents of a surface after creation depend upon the manner
of its creation. If cairo creates the surface and backing storage for
the user, it will be initially cleared; for example,
cairo_image_surface_create() and cairo_surface_create_similar().
Alternatively, if the user passes in a reference to some backing storage
and asks cairo to wrap that in a #cairo_surface_t, then the contents are
not modified; for example, cairo_image_surface_create_for_data() and
cairo_xlib_surface_create().

Memory management of #cairo_surface_t is done with
cairo_surface_reference() and cairo_surface_destroy().</doc>
			<source-position filename="cairo.h" line="164"/>
		</record>
		<enumeration name="_surface_type_t"
								 version="1.2"
								 c:type="cairo_surface_type_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2500">#cairo_surface_type_t is used to describe the type of a given
surface. The surface types are also known as "backends" or "surface
backends" within cairo.

The type of a surface is determined by the function used to create
it, which will generally be of the form
&lt;function&gt;cairo_&lt;emphasis&gt;type&lt;/emphasis&gt;_surface_create(&lt;!-- --&gt;)&lt;/function&gt;,
(though see cairo_surface_create_similar() as well).

The surface type can be queried with cairo_surface_get_type()

The various #cairo_surface_t functions can be used with surfaces of
any type, but some backends also provide type-specific functions
that must only be called with a surface of the appropriate
type. These functions have names that begin with
&lt;literal&gt;cairo_&lt;emphasis&gt;type&lt;/emphasis&gt;_surface&lt;/literal&gt; such as cairo_image_surface_get_width().

The behavior of calling a type-specific function with a surface of
the wrong type is undefined.

New entries may be added in future versions.</doc>
			<source-position filename="cairo.h" line="2589"/>
			<member name="image" value="0" c:identifier="CAIRO_SURFACE_TYPE_IMAGE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2502">The surface is of type image, since 1.2</doc>
			</member>
			<member name="pdf" value="1" c:identifier="CAIRO_SURFACE_TYPE_PDF">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2503">The surface is of type pdf, since 1.2</doc>
			</member>
			<member name="ps" value="2" c:identifier="CAIRO_SURFACE_TYPE_PS">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2504">The surface is of type ps, since 1.2</doc>
			</member>
			<member name="xlib" value="3" c:identifier="CAIRO_SURFACE_TYPE_XLIB">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2505">The surface is of type xlib, since 1.2</doc>
			</member>
			<member name="xcb" value="4" c:identifier="CAIRO_SURFACE_TYPE_XCB">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2506">The surface is of type xcb, since 1.2</doc>
			</member>
			<member name="glitz" value="5" c:identifier="CAIRO_SURFACE_TYPE_GLITZ">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2507">The surface is of type glitz, since 1.2, deprecated 1.18
	(glitz support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="quartz" value="6" c:identifier="CAIRO_SURFACE_TYPE_QUARTZ">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2509">The surface is of type quartz, since 1.2</doc>
			</member>
			<member name="win32" value="7" c:identifier="CAIRO_SURFACE_TYPE_WIN32">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2510">The surface is of type win32, since 1.2</doc>
			</member>
			<member name="beos" value="8" c:identifier="CAIRO_SURFACE_TYPE_BEOS">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2511">The surface is of type beos, since 1.2, deprecated 1.18
	(beos support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="directfb"
							value="9"
							c:identifier="CAIRO_SURFACE_TYPE_DIRECTFB">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2513">The surface is of type directfb, since 1.2, deprecated 1.18
	(directfb support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="svg" value="10" c:identifier="CAIRO_SURFACE_TYPE_SVG">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2515">The surface is of type svg, since 1.2</doc>
			</member>
			<member name="os2" value="11" c:identifier="CAIRO_SURFACE_TYPE_OS2">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2516">The surface is of type os2, since 1.4, deprecated 1.18
	(os2 support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="win32_printing"
							value="12"
							c:identifier="CAIRO_SURFACE_TYPE_WIN32_PRINTING">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2518">The surface is a win32 printing surface, since 1.6</doc>
			</member>
			<member name="quartz_image"
							value="13"
							c:identifier="CAIRO_SURFACE_TYPE_QUARTZ_IMAGE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2519">The surface is of type quartz_image, since 1.6</doc>
			</member>
			<member name="script"
							value="14"
							c:identifier="CAIRO_SURFACE_TYPE_SCRIPT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2520">The surface is of type script, since 1.10</doc>
			</member>
			<member name="qt" value="15" c:identifier="CAIRO_SURFACE_TYPE_QT">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2521">The surface is of type Qt, since 1.10, deprecated 1.18
	(Ot support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="recording"
							value="16"
							c:identifier="CAIRO_SURFACE_TYPE_RECORDING">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2523">The surface is of type recording, since 1.10</doc>
			</member>
			<member name="vg" value="17" c:identifier="CAIRO_SURFACE_TYPE_VG">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2524">The surface is a OpenVG surface, since 1.10, deprecated 1.18
	(OpenVG support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="gl" value="18" c:identifier="CAIRO_SURFACE_TYPE_GL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2526">The surface is of type OpenGL, since 1.10, deprecated 1.18
	(OpenGL support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="drm" value="19" c:identifier="CAIRO_SURFACE_TYPE_DRM">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2528">The surface is of type Direct Render Manager, since 1.10, deprecated 1.18
	(DRM support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="tee" value="20" c:identifier="CAIRO_SURFACE_TYPE_TEE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2530">The surface is of type 'tee' (a multiplexing surface), since 1.10</doc>
			</member>
			<member name="xml" value="21" c:identifier="CAIRO_SURFACE_TYPE_XML">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2531">The surface is of type XML (for debugging), since 1.10</doc>
			</member>
			<member name="skia" value="22" c:identifier="CAIRO_SURFACE_TYPE_SKIA">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2532">The surface is of type Skia, since 1.10, deprecated 1.18
	(Skia support have been removed, this surface type will never be set by cairo)</doc>
			</member>
			<member name="subsurface"
							value="23"
							c:identifier="CAIRO_SURFACE_TYPE_SUBSURFACE">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2534">The surface is a subsurface created with
	cairo_surface_create_for_rectangle(), since 1.10</doc>
			</member>
			<member name="cogl" value="24" c:identifier="CAIRO_SURFACE_TYPE_COGL">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2536">This surface is of type Cogl, since 1.12, deprecated 1.18
	(Cogl support have been removed, this surface type will never be set by cairo)</doc>
			</member>
		</enumeration>
		<record name="_t" c:type="cairo_t" disguised="1" opaque="1" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="120">A #cairo_t contains the current state of the rendering device,
including coordinates of yet to be drawn shapes.

Cairo contexts, as #cairo_t objects are named, are central to
cairo and all drawing with cairo is always done to a #cairo_t
object.

Memory management of #cairo_t is done with
cairo_reference() and cairo_destroy().</doc>
			<source-position filename="cairo.h" line="135"/>
		</record>
		<enumeration name="_text_cluster_flags_t"
								 version="1.8"
								 c:type="cairo_text_cluster_flags_t">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1205">Specifies properties of a text cluster mapping.</doc>
			<source-position filename="cairo.h" line="1216"/>
			<member name="text_cluster_flag_backward"
							value="1"
							c:identifier="CAIRO_TEXT_CLUSTER_FLAG_BACKWARD">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1207">The clusters in the cluster array
map to glyphs in the glyph array from end to start. (Since 1.8)</doc>
			</member>
		</enumeration>
		<record name="_text_cluster_t" c:type="cairo_text_cluster_t" version="1.8">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1174">The #cairo_text_cluster_t structure holds information about a single
&lt;firstterm&gt;text cluster&lt;/firstterm&gt;.  A text cluster is a minimal
mapping of some glyphs corresponding to some UTF-8 text.

For a cluster to be valid, both @num_bytes and @num_glyphs should
be non-negative, and at least one should be non-zero.
Note that clusters with zero glyphs are not as well supported as
normal clusters.  For example, PDF rendering applications typically
ignore those clusters when PDF text is being selected.

See cairo_show_text_glyphs() for how clusters are used in advanced
text operations.</doc>
			<source-position filename="cairo.h" line="1197"/>
			<field name="num_bytes" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1176">the number of bytes of UTF-8 text covered by cluster</doc>
				<type name="gint" c:type="int"/>
			</field>
			<field name="num_glyphs" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1177">the number of glyphs covered by cluster</doc>
				<type name="gint" c:type="int"/>
			</field>
		</record>
		<record name="_text_extents_t" c:type="cairo_text_extents_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1218">The #cairo_text_extents_t structure stores the extents of a single
glyph or a string of glyphs in user-space coordinates. Because text
extents are in user-space coordinates, they are mostly, but not
entirely, independent of the current transformation matrix. If you call
&lt;literal&gt;cairo_scale(cr, 2.0, 2.0)&lt;/literal&gt;, text will
be drawn twice as big, but the reported text extents will not be
doubled. They will change slightly due to hinting (so you can't
assume that metrics are independent of the transformation matrix),
but otherwise will remain unchanged.</doc>
			<source-position filename="cairo.h" line="1254"/>
			<field name="x_bearing" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1220">the horizontal distance from the origin to the
	leftmost part of the glyphs as drawn. Positive if the
	glyphs lie entirely to the right of the origin.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="y_bearing" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1223">the vertical distance from the origin to the
	topmost part of the glyphs as drawn. Positive only if the
	glyphs lie completely below the origin; will usually be
	negative.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="width" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1227">width of the glyphs as drawn</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="height" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1228">height of the glyphs as drawn</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="x_advance" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1229">distance to advance in the X direction
	 after drawing these glyphs</doc>
				<type name="gdouble" c:type="double"/>
			</field>
			<field name="y_advance" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1231">distance to advance in the Y direction
	after drawing these glyphs. Will typically be zero except
	for vertical text layout as found in East-Asian languages.</doc>
				<type name="gdouble" c:type="double"/>
			</field>
		</record>
		<record name="_user_data_key_t"
						c:type="cairo_user_data_key_t"
						version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="243">#cairo_user_data_key_t is used for attaching user data to cairo
data structures.  The actual contents of the struct is never used,
and there is no need to initialize the object; only the unique
address of a #cairo_data_key_t object is used.  Typically, you
would just use the address of a static #cairo_data_key_t object.</doc>
			<source-position filename="cairo.h" line="257"/>
			<field name="unused" writable="1">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="245">not used; ignore.</doc>
				<type name="gint" c:type="int"/>
			</field>
		</record>
		<function name="append_path" c:identifier="cairo_append_path">
			<source-position filename="cairo.h" line="2258"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="_path_t" c:type="const cairo_path_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="arc" c:identifier="cairo_arc">
			<source-position filename="cairo.h" line="922"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="xc" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="yc" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="radius" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="angle1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="angle2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="arc_negative" c:identifier="cairo_arc_negative">
			<source-position filename="cairo.h" line="928"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="xc" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="yc" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="radius" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="angle1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="angle2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="clip" c:identifier="cairo_clip">
			<source-position filename="cairo.h" line="1033"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="clip_extents" c:identifier="cairo_clip_extents">
			<source-position filename="cairo.h" line="1039"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="x2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="clip_preserve" c:identifier="cairo_clip_preserve">
			<source-position filename="cairo.h" line="1036"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="close_path" c:identifier="cairo_close_path">
			<source-position filename="cairo.h" line="964"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="copy_clip_rectangle_list"
							c:identifier="cairo_copy_clip_rectangle_list"
							introspectable="0">
			<source-position filename="cairo.h" line="1076"/>
			<return-value>
				<type name="_rectangle_list_t" c:type="cairo_rectangle_list_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="copy_page" c:identifier="cairo_copy_page">
			<source-position filename="cairo.h" line="1002"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="copy_path"
							c:identifier="cairo_copy_path"
							introspectable="0">
			<source-position filename="cairo.h" line="2252"/>
			<return-value>
				<type name="_path_t" c:type="cairo_path_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="copy_path_flat"
							c:identifier="cairo_copy_path_flat"
							introspectable="0">
			<source-position filename="cairo.h" line="2255"/>
			<return-value>
				<type name="_path_t" c:type="cairo_path_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="create" c:identifier="cairo_create" introspectable="0">
			<source-position filename="cairo.h" line="540"/>
			<return-value>
				<type name="_t" c:type="cairo_t*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="curve_to" c:identifier="cairo_curve_to">
			<source-position filename="cairo.h" line="916"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="x2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="x3" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y3" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="debug_reset_static_data"
							c:identifier="cairo_debug_reset_static_data">
			<source-position filename="cairo.h" line="3343"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
		</function>
		<function name="destroy" c:identifier="cairo_destroy">
			<source-position filename="cairo.h" line="546"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<callback name="destroy_func_t"
							c:type="cairo_destroy_func_t"
							version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="231">#cairo_destroy_func_t the type of function which is called when a
data element is destroyed. It is passed the pointer to the data
element and should free any memory and resources allocated for it.</doc>
			<source-position filename="cairo.h" line="241"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="233">The data element being destroyed.</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<function name="device_acquire" c:identifier="cairo_device_acquire">
			<source-position filename="cairo.h" line="2328"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_destroy" c:identifier="cairo_device_destroy">
			<source-position filename="cairo.h" line="2340"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_finish" c:identifier="cairo_device_finish">
			<source-position filename="cairo.h" line="2337"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_flush" c:identifier="cairo_device_flush">
			<source-position filename="cairo.h" line="2334"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_get_reference_count"
							c:identifier="cairo_device_get_reference_count">
			<source-position filename="cairo.h" line="2343"/>
			<return-value transfer-ownership="none">
				<type name="guint" c:type="unsigned int"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_get_type" c:identifier="cairo_device_get_type">
			<source-position filename="cairo.h" line="2322"/>
			<return-value transfer-ownership="none">
				<type name="_device_type_t" c:type="cairo_device_type_t"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_get_user_data"
							c:identifier="cairo_device_get_user_data">
			<source-position filename="cairo.h" line="2346"/>
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_observer_elapsed"
							c:identifier="cairo_device_observer_elapsed">
			<source-position filename="cairo.h" line="2465"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="abstract_device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_observer_fill_elapsed"
							c:identifier="cairo_device_observer_fill_elapsed">
			<source-position filename="cairo.h" line="2474"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="abstract_device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_observer_glyphs_elapsed"
							c:identifier="cairo_device_observer_glyphs_elapsed">
			<source-position filename="cairo.h" line="2480"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="abstract_device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_observer_mask_elapsed"
							c:identifier="cairo_device_observer_mask_elapsed">
			<source-position filename="cairo.h" line="2471"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="abstract_device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_observer_paint_elapsed"
							c:identifier="cairo_device_observer_paint_elapsed">
			<source-position filename="cairo.h" line="2468"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="abstract_device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_observer_print"
							c:identifier="cairo_device_observer_print"
							introspectable="0">
			<source-position filename="cairo.h" line="2460"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
				<parameter name="write_func" transfer-ownership="none">
					<type name="write_func_t" c:type="cairo_write_func_t"/>
				</parameter>
				<parameter name="closure"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_observer_stroke_elapsed"
							c:identifier="cairo_device_observer_stroke_elapsed">
			<source-position filename="cairo.h" line="2477"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="abstract_device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_reference"
							c:identifier="cairo_device_reference"
							introspectable="0">
			<source-position filename="cairo.h" line="2275"/>
			<return-value>
				<type name="_device_t" c:type="cairo_device_t*"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_release" c:identifier="cairo_device_release">
			<source-position filename="cairo.h" line="2331"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_set_user_data"
							c:identifier="cairo_device_set_user_data"
							introspectable="0">
			<source-position filename="cairo.h" line="2350"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
				<parameter name="user_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="destroy" transfer-ownership="none">
					<type name="destroy_func_t" c:type="cairo_destroy_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_status" c:identifier="cairo_device_status">
			<source-position filename="cairo.h" line="2325"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="_device_t" c:type="cairo_device_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_to_user" c:identifier="cairo_device_to_user">
			<source-position filename="cairo.h" line="897"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="device_to_user_distance"
							c:identifier="cairo_device_to_user_distance">
			<source-position filename="cairo.h" line="900"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="dx" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="dy" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="fill" c:identifier="cairo_fill">
			<source-position filename="cairo.h" line="996"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="fill_extents" c:identifier="cairo_fill_extents">
			<source-position filename="cairo.h" line="1024"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="x2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="fill_preserve" c:identifier="cairo_fill_preserve">
			<source-position filename="cairo.h" line="999"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_extents" c:identifier="cairo_font_extents">
			<source-position filename="cairo.h" line="1620"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_font_extents_t" c:type="cairo_font_extents_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_face_destroy" c:identifier="cairo_font_face_destroy">
			<source-position filename="cairo.h" line="1629"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_face_get_reference_count"
							c:identifier="cairo_font_face_get_reference_count">
			<source-position filename="cairo.h" line="1632"/>
			<return-value transfer-ownership="none">
				<type name="guint" c:type="unsigned int"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_face_get_type"
							c:identifier="cairo_font_face_get_type">
			<source-position filename="cairo.h" line="1688"/>
			<return-value transfer-ownership="none">
				<type name="_font_type_t" c:type="cairo_font_type_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_face_get_user_data"
							c:identifier="cairo_font_face_get_user_data">
			<source-position filename="cairo.h" line="1691"/>
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_face_reference"
							c:identifier="cairo_font_face_reference"
							introspectable="0">
			<source-position filename="cairo.h" line="1626"/>
			<return-value>
				<type name="_font_face_t" c:type="cairo_font_face_t*"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_face_set_user_data"
							c:identifier="cairo_font_face_set_user_data"
							introspectable="0">
			<source-position filename="cairo.h" line="1695"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
				<parameter name="user_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="destroy" transfer-ownership="none">
					<type name="destroy_func_t" c:type="cairo_destroy_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_face_status" c:identifier="cairo_font_face_status">
			<source-position filename="cairo.h" line="1635"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_copy"
							c:identifier="cairo_font_options_copy"
							introspectable="0">
			<source-position filename="cairo.h" line="1468"/>
			<return-value>
				<type name="_font_options_t" c:type="cairo_font_options_t*"/>
			</return-value>
			<parameters>
				<parameter name="original" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_create"
							c:identifier="cairo_font_options_create"
							introspectable="0">
			<source-position filename="cairo.h" line="1465"/>
			<return-value>
				<type name="_font_options_t" c:type="cairo_font_options_t*"/>
			</return-value>
		</function>
		<function name="font_options_destroy"
							c:identifier="cairo_font_options_destroy">
			<source-position filename="cairo.h" line="1471"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_equal"
							c:identifier="cairo_font_options_equal">
			<source-position filename="cairo.h" line="1480"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_antialias"
							c:identifier="cairo_font_options_get_antialias">
			<source-position filename="cairo.h" line="1490"/>
			<return-value transfer-ownership="none">
				<type name="_antialias_t" c:type="cairo_antialias_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_color_mode"
							c:identifier="cairo_font_options_get_color_mode">
			<source-position filename="cairo.h" line="1524"/>
			<return-value transfer-ownership="none">
				<type name="_color_mode_t" c:type="cairo_color_mode_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_color_palette"
							c:identifier="cairo_font_options_get_color_palette">
			<source-position filename="cairo.h" line="1527"/>
			<return-value transfer-ownership="none">
				<type name="guint" c:type="unsigned int"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_custom_palette_color"
							c:identifier="cairo_font_options_get_custom_palette_color">
			<source-position filename="cairo.h" line="1540"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_hint_metrics"
							c:identifier="cairo_font_options_get_hint_metrics">
			<source-position filename="cairo.h" line="1508"/>
			<return-value transfer-ownership="none">
				<type name="_hint_metrics_t" c:type="cairo_hint_metrics_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_hint_style"
							c:identifier="cairo_font_options_get_hint_style">
			<source-position filename="cairo.h" line="1502"/>
			<return-value transfer-ownership="none">
				<type name="_hint_style_t" c:type="cairo_hint_style_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_subpixel_order"
							c:identifier="cairo_font_options_get_subpixel_order">
			<source-position filename="cairo.h" line="1496"/>
			<return-value transfer-ownership="none">
				<type name="_subpixel_order_t" c:type="cairo_subpixel_order_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_get_variations"
							c:identifier="cairo_font_options_get_variations">
			<source-position filename="cairo.h" line="1511"/>
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const char*"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_hash" c:identifier="cairo_font_options_hash">
			<source-position filename="cairo.h" line="1484"/>
			<return-value transfer-ownership="none">
				<type name="gulong" c:type="unsigned long"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_merge"
							c:identifier="cairo_font_options_merge">
			<source-position filename="cairo.h" line="1477"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_antialias"
							c:identifier="cairo_font_options_set_antialias">
			<source-position filename="cairo.h" line="1487"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="antialias" transfer-ownership="none">
					<type name="_antialias_t" c:type="cairo_antialias_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_color_mode"
							c:identifier="cairo_font_options_set_color_mode">
			<source-position filename="cairo.h" line="1520"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="color_mode" transfer-ownership="none">
					<type name="_color_mode_t" c:type="cairo_color_mode_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_color_palette"
							c:identifier="cairo_font_options_set_color_palette">
			<source-position filename="cairo.h" line="1530"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="palette_index" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_custom_palette_color"
							c:identifier="cairo_font_options_set_custom_palette_color">
			<source-position filename="cairo.h" line="1534"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_hint_metrics"
							c:identifier="cairo_font_options_set_hint_metrics">
			<source-position filename="cairo.h" line="1505"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="hint_metrics" transfer-ownership="none">
					<type name="_hint_metrics_t" c:type="cairo_hint_metrics_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_hint_style"
							c:identifier="cairo_font_options_set_hint_style">
			<source-position filename="cairo.h" line="1499"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="hint_style" transfer-ownership="none">
					<type name="_hint_style_t" c:type="cairo_hint_style_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_subpixel_order"
							c:identifier="cairo_font_options_set_subpixel_order">
			<source-position filename="cairo.h" line="1493"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="subpixel_order" transfer-ownership="none">
					<type name="_subpixel_order_t" c:type="cairo_subpixel_order_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_set_variations"
							c:identifier="cairo_font_options_set_variations">
			<source-position filename="cairo.h" line="1514"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
				<parameter name="variations" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="font_options_status"
							c:identifier="cairo_font_options_status">
			<source-position filename="cairo.h" line="1474"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="format_stride_for_width"
							c:identifier="cairo_format_stride_for_width">
			<source-position filename="cairo.h" line="2715"/>
			<return-value transfer-ownership="none">
				<type name="gint" c:type="int"/>
			</return-value>
			<parameters>
				<parameter name="format" transfer-ownership="none">
					<type name="_format_t" c:type="cairo_format_t"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_antialias" c:identifier="cairo_get_antialias">
			<source-position filename="cairo.h" line="2084"/>
			<return-value transfer-ownership="none">
				<type name="_antialias_t" c:type="cairo_antialias_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_current_point" c:identifier="cairo_get_current_point">
			<source-position filename="cairo.h" line="2090"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_dash" c:identifier="cairo_get_dash">
			<source-position filename="cairo.h" line="2114"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="dashes" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_dash_count" c:identifier="cairo_get_dash_count">
			<source-position filename="cairo.h" line="2111"/>
			<return-value transfer-ownership="none">
				<type name="gint" c:type="int"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_fill_rule" c:identifier="cairo_get_fill_rule">
			<source-position filename="cairo.h" line="2093"/>
			<return-value transfer-ownership="none">
				<type name="_fill_rule_t" c:type="cairo_fill_rule_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_font_face"
							c:identifier="cairo_get_font_face"
							introspectable="0">
			<source-position filename="cairo.h" line="1577"/>
			<return-value>
				<type name="_font_face_t" c:type="cairo_font_face_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_font_matrix" c:identifier="cairo_get_font_matrix">
			<source-position filename="cairo.h" line="1562"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_font_options" c:identifier="cairo_get_font_options">
			<source-position filename="cairo.h" line="1570"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_group_target"
							c:identifier="cairo_get_group_target"
							introspectable="0">
			<source-position filename="cairo.h" line="2123"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_hairline" c:identifier="cairo_get_hairline">
			<source-position filename="cairo.h" line="2099"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_line_cap" c:identifier="cairo_get_line_cap">
			<source-position filename="cairo.h" line="2102"/>
			<return-value transfer-ownership="none">
				<type name="_line_cap_t" c:type="cairo_line_cap_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_line_join" c:identifier="cairo_get_line_join">
			<source-position filename="cairo.h" line="2105"/>
			<return-value transfer-ownership="none">
				<type name="_line_join_t" c:type="cairo_line_join_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_line_width" c:identifier="cairo_get_line_width">
			<source-position filename="cairo.h" line="2096"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_matrix" c:identifier="cairo_get_matrix">
			<source-position filename="cairo.h" line="2117"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_miter_limit" c:identifier="cairo_get_miter_limit">
			<source-position filename="cairo.h" line="2108"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_operator" c:identifier="cairo_get_operator">
			<source-position filename="cairo.h" line="2075"/>
			<return-value transfer-ownership="none">
				<type name="_operator_t" c:type="cairo_operator_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_reference_count"
							c:identifier="cairo_get_reference_count">
			<source-position filename="cairo.h" line="549"/>
			<return-value transfer-ownership="none">
				<type name="guint" c:type="unsigned int"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_scaled_font"
							c:identifier="cairo_get_scaled_font"
							introspectable="0">
			<source-position filename="cairo.h" line="1584"/>
			<return-value>
				<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_source"
							c:identifier="cairo_get_source"
							introspectable="0">
			<source-position filename="cairo.h" line="2078"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_target"
							c:identifier="cairo_get_target"
							introspectable="0">
			<source-position filename="cairo.h" line="2120"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_tolerance" c:identifier="cairo_get_tolerance">
			<source-position filename="cairo.h" line="2081"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="get_user_data" c:identifier="cairo_get_user_data">
			<source-position filename="cairo.h" line="552"/>
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="glyph_allocate"
							c:identifier="cairo_glyph_allocate"
							introspectable="0">
			<source-position filename="cairo.h" line="1169"/>
			<return-value>
				<type name="_glyph_t" c:type="cairo_glyph_t*"/>
			</return-value>
			<parameters>
				<parameter name="num_glyphs" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="glyph_extents" c:identifier="cairo_glyph_extents">
			<source-position filename="cairo.h" line="1614"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="glyphs" transfer-ownership="none">
					<type name="_glyph_t" c:type="const cairo_glyph_t*"/>
				</parameter>
				<parameter name="num_glyphs" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_text_extents_t" c:type="cairo_text_extents_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="glyph_free" c:identifier="cairo_glyph_free">
			<source-position filename="cairo.h" line="1172"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="glyphs" transfer-ownership="none">
					<type name="_glyph_t" c:type="cairo_glyph_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="glyph_path" c:identifier="cairo_glyph_path">
			<source-position filename="cairo.h" line="1606"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="glyphs" transfer-ownership="none">
					<type name="_glyph_t" c:type="const cairo_glyph_t*"/>
				</parameter>
				<parameter name="num_glyphs" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="has_current_point" c:identifier="cairo_has_current_point">
			<source-position filename="cairo.h" line="2087"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="identity_matrix" c:identifier="cairo_identity_matrix">
			<source-position filename="cairo.h" line="888"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_create"
							c:identifier="cairo_image_surface_create"
							introspectable="0">
			<source-position filename="cairo.h" line="2710"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="format" transfer-ownership="none">
					<type name="_format_t" c:type="cairo_format_t"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_create_for_data"
							c:identifier="cairo_image_surface_create_for_data"
							introspectable="0">
			<source-position filename="cairo.h" line="2719"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="guint8" c:type="unsigned char*"/>
				</parameter>
				<parameter name="format" transfer-ownership="none">
					<type name="_format_t" c:type="cairo_format_t"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="stride" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_create_from_png"
							c:identifier="cairo_image_surface_create_from_png"
							introspectable="0">
			<source-position filename="cairo.h" line="2743"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="filename" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_create_from_png_stream"
							c:identifier="cairo_image_surface_create_from_png_stream"
							introspectable="0">
			<source-position filename="cairo.h" line="2746"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="read_func" transfer-ownership="none">
					<type name="read_func_t" c:type="cairo_read_func_t"/>
				</parameter>
				<parameter name="closure"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_get_data"
							c:identifier="cairo_image_surface_get_data">
			<source-position filename="cairo.h" line="2726"/>
			<return-value transfer-ownership="none">
				<type name="guint8" c:type="unsigned char*"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_get_format"
							c:identifier="cairo_image_surface_get_format">
			<source-position filename="cairo.h" line="2729"/>
			<return-value transfer-ownership="none">
				<type name="_format_t" c:type="cairo_format_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_get_height"
							c:identifier="cairo_image_surface_get_height">
			<source-position filename="cairo.h" line="2735"/>
			<return-value transfer-ownership="none">
				<type name="gint" c:type="int"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_get_stride"
							c:identifier="cairo_image_surface_get_stride">
			<source-position filename="cairo.h" line="2738"/>
			<return-value transfer-ownership="none">
				<type name="gint" c:type="int"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="image_surface_get_width"
							c:identifier="cairo_image_surface_get_width">
			<source-position filename="cairo.h" line="2732"/>
			<return-value transfer-ownership="none">
				<type name="gint" c:type="int"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="in_clip" c:identifier="cairo_in_clip">
			<source-position filename="cairo.h" line="1015"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="in_fill" c:identifier="cairo_in_fill">
			<source-position filename="cairo.h" line="1012"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="in_stroke" c:identifier="cairo_in_stroke">
			<source-position filename="cairo.h" line="1009"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="line_to" c:identifier="cairo_line_to">
			<source-position filename="cairo.h" line="913"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="mask" c:identifier="cairo_mask">
			<source-position filename="cairo.h" line="980"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="mask_surface" c:identifier="cairo_mask_surface">
			<source-position filename="cairo.h" line="984"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="surface_x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="surface_y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_init" c:identifier="cairo_matrix_init">
			<source-position filename="cairo.h" line="3184"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="xx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="yx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="xy" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="yy" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="x0" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y0" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_init_identity"
							c:identifier="cairo_matrix_init_identity">
			<source-position filename="cairo.h" line="3190"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_init_rotate"
							c:identifier="cairo_matrix_init_rotate">
			<source-position filename="cairo.h" line="3201"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="radians" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_init_scale" c:identifier="cairo_matrix_init_scale">
			<source-position filename="cairo.h" line="3197"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="sx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="sy" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_init_translate"
							c:identifier="cairo_matrix_init_translate">
			<source-position filename="cairo.h" line="3193"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="tx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="ty" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_invert" c:identifier="cairo_matrix_invert">
			<source-position filename="cairo.h" line="3214"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_multiply" c:identifier="cairo_matrix_multiply">
			<source-position filename="cairo.h" line="3217"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="a" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
				<parameter name="b" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_rotate" c:identifier="cairo_matrix_rotate">
			<source-position filename="cairo.h" line="3211"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="radians" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_scale" c:identifier="cairo_matrix_scale">
			<source-position filename="cairo.h" line="3208"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="sx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="sy" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_transform_distance"
							c:identifier="cairo_matrix_transform_distance">
			<source-position filename="cairo.h" line="3222"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
				<parameter name="dx" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="dy" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_transform_point"
							c:identifier="cairo_matrix_transform_point">
			<source-position filename="cairo.h" line="3226"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="matrix_translate" c:identifier="cairo_matrix_translate">
			<source-position filename="cairo.h" line="3205"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
				<parameter name="tx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="ty" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_begin_patch"
							c:identifier="cairo_mesh_pattern_begin_patch">
			<source-position filename="cairo.h" line="3014"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_curve_to"
							c:identifier="cairo_mesh_pattern_curve_to">
			<source-position filename="cairo.h" line="3020"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="x2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="x3" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y3" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_end_patch"
							c:identifier="cairo_mesh_pattern_end_patch">
			<source-position filename="cairo.h" line="3017"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_get_control_point"
							c:identifier="cairo_mesh_pattern_get_control_point">
			<source-position filename="cairo.h" line="3176"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="patch_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="point_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_get_corner_color_rgba"
							c:identifier="cairo_mesh_pattern_get_corner_color_rgba">
			<source-position filename="cairo.h" line="3169"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="patch_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="corner_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_get_patch_count"
							c:identifier="cairo_mesh_pattern_get_patch_count">
			<source-position filename="cairo.h" line="3161"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="guint" c:type="unsigned int*"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_get_path"
							c:identifier="cairo_mesh_pattern_get_path"
							introspectable="0">
			<source-position filename="cairo.h" line="3165"/>
			<return-value>
				<type name="_path_t" c:type="cairo_path_t*"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="patch_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_line_to"
							c:identifier="cairo_mesh_pattern_line_to">
			<source-position filename="cairo.h" line="3026"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_move_to"
							c:identifier="cairo_mesh_pattern_move_to">
			<source-position filename="cairo.h" line="3030"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_set_control_point"
							c:identifier="cairo_mesh_pattern_set_control_point">
			<source-position filename="cairo.h" line="3034"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="point_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_set_corner_color_rgb"
							c:identifier="cairo_mesh_pattern_set_corner_color_rgb">
			<source-position filename="cairo.h" line="3039"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="corner_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="mesh_pattern_set_corner_color_rgba"
							c:identifier="cairo_mesh_pattern_set_corner_color_rgba">
			<source-position filename="cairo.h" line="3044"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="corner_num" transfer-ownership="none">
					<type name="guint" c:type="unsigned int"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="move_to" c:identifier="cairo_move_to">
			<source-position filename="cairo.h" line="907"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="new_path" c:identifier="cairo_new_path">
			<source-position filename="cairo.h" line="904"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="new_sub_path" c:identifier="cairo_new_sub_path">
			<source-position filename="cairo.h" line="910"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="paint" c:identifier="cairo_paint">
			<source-position filename="cairo.h" line="973"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="paint_with_alpha" c:identifier="cairo_paint_with_alpha">
			<source-position filename="cairo.h" line="976"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="path_destroy" c:identifier="cairo_path_destroy">
			<source-position filename="cairo.h" line="2262"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="_path_t" c:type="cairo_path_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="path_extents" c:identifier="cairo_path_extents">
			<source-position filename="cairo.h" line="967"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="x2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_add_color_stop_rgb"
							c:identifier="cairo_pattern_add_color_stop_rgb">
			<source-position filename="cairo.h" line="3003"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_add_color_stop_rgba"
							c:identifier="cairo_pattern_add_color_stop_rgba">
			<source-position filename="cairo.h" line="3008"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_create_for_surface"
							c:identifier="cairo_pattern_create_for_surface"
							introspectable="0">
			<source-position filename="cairo.h" line="2923"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_create_linear"
							c:identifier="cairo_pattern_create_linear"
							introspectable="0">
			<source-position filename="cairo.h" line="2926"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="x0" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y0" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_create_mesh"
							c:identifier="cairo_pattern_create_mesh"
							introspectable="0">
			<source-position filename="cairo.h" line="2934"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
		</function>
		<function name="pattern_create_radial"
							c:identifier="cairo_pattern_create_radial"
							introspectable="0">
			<source-position filename="cairo.h" line="2930"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="cx0" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="cy0" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="radius0" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="cx1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="cy1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="radius1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_create_raster_source"
							c:identifier="cairo_pattern_create_raster_source"
							introspectable="0">
			<source-position filename="cairo.h" line="2872"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="user_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="content" transfer-ownership="none">
					<type name="_content_t" c:type="cairo_content_t"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_create_rgb"
							c:identifier="cairo_pattern_create_rgb"
							introspectable="0">
			<source-position filename="cairo.h" line="2916"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_create_rgba"
							c:identifier="cairo_pattern_create_rgba"
							introspectable="0">
			<source-position filename="cairo.h" line="2919"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_destroy" c:identifier="cairo_pattern_destroy">
			<source-position filename="cairo.h" line="2940"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_color_stop_count"
							c:identifier="cairo_pattern_get_color_stop_count">
			<source-position filename="cairo.h" line="3147"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="int*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_color_stop_rgba"
							c:identifier="cairo_pattern_get_color_stop_rgba">
			<source-position filename="cairo.h" line="3141"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_dither"
							c:identifier="cairo_pattern_get_dither">
			<source-position filename="cairo.h" line="474"/>
			<return-value transfer-ownership="none">
				<type name="_dither_t" c:type="cairo_dither_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_extend"
							c:identifier="cairo_pattern_get_extend">
			<source-position filename="cairo.h" line="3093"/>
			<return-value transfer-ownership="none">
				<type name="_extend_t" c:type="cairo_extend_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_filter"
							c:identifier="cairo_pattern_get_filter">
			<source-position filename="cairo.h" line="3128"/>
			<return-value transfer-ownership="none">
				<type name="_filter_t" c:type="cairo_filter_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_linear_points"
							c:identifier="cairo_pattern_get_linear_points">
			<source-position filename="cairo.h" line="3151"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="x0" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y0" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_matrix"
							c:identifier="cairo_pattern_get_matrix">
			<source-position filename="cairo.h" line="3054"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_radial_circles"
							c:identifier="cairo_pattern_get_radial_circles">
			<source-position filename="cairo.h" line="3156"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="x0" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y0" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="r0" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="r1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_reference_count"
							c:identifier="cairo_pattern_get_reference_count">
			<source-position filename="cairo.h" line="2943"/>
			<return-value transfer-ownership="none">
				<type name="guint" c:type="unsigned int"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_rgba" c:identifier="cairo_pattern_get_rgba">
			<source-position filename="cairo.h" line="3131"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_surface"
							c:identifier="cairo_pattern_get_surface">
			<source-position filename="cairo.h" line="3136"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t**"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_type" c:identifier="cairo_pattern_get_type">
			<source-position filename="cairo.h" line="3000"/>
			<return-value transfer-ownership="none">
				<type name="_pattern_type_t" c:type="cairo_pattern_type_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_get_user_data"
							c:identifier="cairo_pattern_get_user_data">
			<source-position filename="cairo.h" line="2949"/>
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_reference"
							c:identifier="cairo_pattern_reference"
							introspectable="0">
			<source-position filename="cairo.h" line="2937"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_set_dither"
							c:identifier="cairo_pattern_set_dither">
			<source-position filename="cairo.h" line="471"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="dither" transfer-ownership="none">
					<type name="_dither_t" c:type="cairo_dither_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_set_extend"
							c:identifier="cairo_pattern_set_extend">
			<source-position filename="cairo.h" line="3090"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="extend" transfer-ownership="none">
					<type name="_extend_t" c:type="cairo_extend_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_set_filter"
							c:identifier="cairo_pattern_set_filter">
			<source-position filename="cairo.h" line="3125"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="filter" transfer-ownership="none">
					<type name="_filter_t" c:type="cairo_filter_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_set_matrix"
							c:identifier="cairo_pattern_set_matrix">
			<source-position filename="cairo.h" line="3050"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_set_user_data"
							c:identifier="cairo_pattern_set_user_data"
							introspectable="0">
			<source-position filename="cairo.h" line="2953"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
				<parameter name="user_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="destroy" transfer-ownership="none">
					<type name="destroy_func_t" c:type="cairo_destroy_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="pattern_status" c:identifier="cairo_pattern_status">
			<source-position filename="cairo.h" line="2946"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pop_group"
							c:identifier="cairo_pop_group"
							introspectable="0">
			<source-position filename="cairo.h" line="574"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="pop_group_to_source"
							c:identifier="cairo_pop_group_to_source">
			<source-position filename="cairo.h" line="577"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="push_group" c:identifier="cairo_push_group">
			<source-position filename="cairo.h" line="568"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="push_group_with_content"
							c:identifier="cairo_push_group_with_content">
			<source-position filename="cairo.h" line="571"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="content" transfer-ownership="none">
					<type name="_content_t" c:type="cairo_content_t"/>
				</parameter>
			</parameters>
		</function>
		<callback name="raster_source_acquire_func_t"
							c:type="cairo_raster_source_acquire_func_t"
							version="1.12"
							introspectable="0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2770">#cairo_raster_source_acquire_func_t is the type of function which is
called when a pattern is being rendered from. It should create a surface
that provides the pixel data for the region of interest as defined by
extents, though the surface itself does not have to be limited to that
area. For convenience the surface should probably be of image type,
created with cairo_surface_create_similar_image() for the target (which
enables the number of copies to be reduced during transfer to the
device). Another option, might be to return a similar surface to the
target for explicit handling by the application of a set of cached sources
on the device. The region of sample data provided should be defined using
cairo_surface_set_device_offset() to specify the top-left corner of the
sample data (along with width and height of the surface).</doc>
			<source-position filename="cairo.h" line="2795"/>
			<return-value>
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2790">a #cairo_surface_t</doc>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2772">the pattern being rendered from</doc>
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="callback_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2773">the user data supplied during creation</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="target" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2774">the rendering target surface</doc>
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2775">rectangular region of interest in pixels in sample space</doc>
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="raster_source_copy_func_t"
							c:type="cairo_raster_source_copy_func_t"
							version="1.12">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2838">#cairo_raster_source_copy_func_t is the type of function which is
called when the pattern gets copied as a normal part of rendering.</doc>
			<source-position filename="cairo.h" line="2853"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2847">CAIRO_STATUS_SUCCESS on success, or one of the
#cairo_status_t error codes for failure.</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2840">the #cairo_pattern_t that was copied to</doc>
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="callback_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2841">the user data supplied during creation</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="other" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2842">the #cairo_pattern_t being used as the source for the copy</doc>
					<type name="_pattern_t" c:type="const cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="raster_source_finish_func_t"
							c:type="cairo_raster_source_finish_func_t"
							version="1.12">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2857">#cairo_raster_source_finish_func_t is the type of function which is
called when the pattern (or a copy thereof) is no longer required.</doc>
			<source-position filename="cairo.h" line="2868"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2859">the pattern being rendered from</doc>
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="callback_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2860">the user data supplied during creation</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<function name="raster_source_pattern_get_acquire"
							c:identifier="cairo_raster_source_pattern_get_acquire"
							introspectable="0">
			<source-position filename="cairo.h" line="2889"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="acquire" transfer-ownership="none">
					<type name="raster_source_acquire_func_t"
								c:type="cairo_raster_source_acquire_func_t*"/>
				</parameter>
				<parameter name="release" transfer-ownership="none">
					<type name="raster_source_release_func_t"
								c:type="cairo_raster_source_release_func_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_get_callback_data"
							c:identifier="cairo_raster_source_pattern_get_callback_data">
			<source-position filename="cairo.h" line="2881"/>
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_get_copy"
							c:identifier="cairo_raster_source_pattern_get_copy"
							introspectable="0">
			<source-position filename="cairo.h" line="2904"/>
			<return-value>
				<type name="raster_source_copy_func_t"
							c:type="cairo_raster_source_copy_func_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_get_finish"
							c:identifier="cairo_raster_source_pattern_get_finish"
							introspectable="0">
			<source-position filename="cairo.h" line="2911"/>
			<return-value>
				<type name="raster_source_finish_func_t"
							c:type="cairo_raster_source_finish_func_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_get_snapshot"
							c:identifier="cairo_raster_source_pattern_get_snapshot"
							introspectable="0">
			<source-position filename="cairo.h" line="2897"/>
			<return-value>
				<type name="raster_source_snapshot_func_t"
							c:type="cairo_raster_source_snapshot_func_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_set_acquire"
							c:identifier="cairo_raster_source_pattern_set_acquire"
							introspectable="0">
			<source-position filename="cairo.h" line="2884"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="acquire" transfer-ownership="none">
					<type name="raster_source_acquire_func_t"
								c:type="cairo_raster_source_acquire_func_t"/>
				</parameter>
				<parameter name="release" transfer-ownership="none">
					<type name="raster_source_release_func_t"
								c:type="cairo_raster_source_release_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_set_callback_data"
							c:identifier="cairo_raster_source_pattern_set_callback_data">
			<source-position filename="cairo.h" line="2877"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_set_copy"
							c:identifier="cairo_raster_source_pattern_set_copy"
							introspectable="0">
			<source-position filename="cairo.h" line="2900"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="copy" transfer-ownership="none">
					<type name="raster_source_copy_func_t"
								c:type="cairo_raster_source_copy_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_set_finish"
							c:identifier="cairo_raster_source_pattern_set_finish"
							introspectable="0">
			<source-position filename="cairo.h" line="2907"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="finish" transfer-ownership="none">
					<type name="raster_source_finish_func_t"
								c:type="cairo_raster_source_finish_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="raster_source_pattern_set_snapshot"
							c:identifier="cairo_raster_source_pattern_set_snapshot"
							introspectable="0">
			<source-position filename="cairo.h" line="2893"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="snapshot" transfer-ownership="none">
					<type name="raster_source_snapshot_func_t"
								c:type="cairo_raster_source_snapshot_func_t"/>
				</parameter>
			</parameters>
		</function>
		<callback name="raster_source_release_func_t"
							c:type="cairo_raster_source_release_func_t"
							version="1.12">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2800">#cairo_raster_source_release_func_t is the type of function which is
called when the pixel data is no longer being access by the pattern
for the rendering operation. Typically this function will simply
destroy the surface created during acquire.</doc>
			<source-position filename="cairo.h" line="2814"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2802">the pattern being rendered from</doc>
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="callback_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2803">the user data supplied during creation</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="surface" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2804">the surface created during acquire</doc>
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="raster_source_snapshot_func_t"
							c:type="cairo_raster_source_snapshot_func_t"
							version="1.12">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2818">#cairo_raster_source_snapshot_func_t is the type of function which is
called when the pixel data needs to be preserved for later use
during printing. This pattern will be accessed again later, and it
is expected to provide the pixel data that was current at the time
of snapshotting.</doc>
			<source-position filename="cairo.h" line="2835"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2829">CAIRO_STATUS_SUCCESS on success, or one of the
#cairo_status_t error codes for failure.</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="pattern" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2820">the pattern being rendered from</doc>
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
				<parameter name="callback_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2821">the user data supplied during creation</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="read_func_t" c:type="cairo_read_func_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="498">#cairo_read_func_t is the type of function which is called when a
backend needs to read data from an input stream.  It is passed the
closure which was specified by the user at the time the read
function was registered, the buffer to read the data into and the
length of the data in bytes.  The read function should return
%CAIRO_STATUS_SUCCESS if all the data was successfully read,
%CAIRO_STATUS_READ_ERROR otherwise.</doc>
			<source-position filename="cairo.h" line="516"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="512">the status code of the read operation</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="closure"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="500">the input closure</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="501">the buffer into which to read the data</doc>
					<type name="guint8" c:type="unsigned char*"/>
				</parameter>
				<parameter name="length" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="502">the amount of data to read</doc>
					<type name="guint" c:type="unsigned int"/>
				</parameter>
			</parameters>
		</callback>
		<function name="recording_surface_create"
							c:identifier="cairo_recording_surface_create"
							introspectable="0">
			<source-position filename="cairo.h" line="2754"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="content" transfer-ownership="none">
					<type name="_content_t" c:type="cairo_content_t"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_rectangle_t" c:type="const cairo_rectangle_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="recording_surface_get_extents"
							c:identifier="cairo_recording_surface_get_extents">
			<source-position filename="cairo.h" line="2765"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_rectangle_t" c:type="cairo_rectangle_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="recording_surface_ink_extents"
							c:identifier="cairo_recording_surface_ink_extents">
			<source-position filename="cairo.h" line="2758"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x0" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y0" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="rectangle" c:identifier="cairo_rectangle">
			<source-position filename="cairo.h" line="954"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="rectangle_list_destroy"
							c:identifier="cairo_rectangle_list_destroy">
			<source-position filename="cairo.h" line="1079"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="rectangle_list" transfer-ownership="none">
					<type name="_rectangle_list_t" c:type="cairo_rectangle_list_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="reference"
							c:identifier="cairo_reference"
							introspectable="0">
			<source-position filename="cairo.h" line="543"/>
			<return-value>
				<type name="_t" c:type="cairo_t*"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_contains_point"
							c:identifier="cairo_region_contains_point">
			<source-position filename="cairo.h" line="3308"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_contains_rectangle"
							c:identifier="cairo_region_contains_rectangle">
			<source-position filename="cairo.h" line="3304"/>
			<return-value transfer-ownership="none">
				<type name="_region_overlap_t" c:type="cairo_region_overlap_t"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
				<parameter name="rectangle" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_copy"
							c:identifier="cairo_region_copy"
							introspectable="0">
			<source-position filename="cairo.h" line="3274"/>
			<return-value>
				<type name="_region_t" c:type="cairo_region_t*"/>
			</return-value>
			<parameters>
				<parameter name="original" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_create"
							c:identifier="cairo_region_create"
							introspectable="0">
			<source-position filename="cairo.h" line="3264"/>
			<return-value>
				<type name="_region_t" c:type="cairo_region_t*"/>
			</return-value>
		</function>
		<function name="region_create_rectangle"
							c:identifier="cairo_region_create_rectangle"
							introspectable="0">
			<source-position filename="cairo.h" line="3267"/>
			<return-value>
				<type name="_region_t" c:type="cairo_region_t*"/>
			</return-value>
			<parameters>
				<parameter name="rectangle" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_create_rectangles"
							c:identifier="cairo_region_create_rectangles"
							introspectable="0">
			<source-position filename="cairo.h" line="3270"/>
			<return-value>
				<type name="_region_t" c:type="cairo_region_t*"/>
			</return-value>
			<parameters>
				<parameter name="rects" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
				<parameter name="count" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_destroy" c:identifier="cairo_region_destroy">
			<source-position filename="cairo.h" line="3280"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_equal" c:identifier="cairo_region_equal">
			<source-position filename="cairo.h" line="3283"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="a" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
				<parameter name="b" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_get_extents"
							c:identifier="cairo_region_get_extents">
			<source-position filename="cairo.h" line="3289"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_get_rectangle"
							c:identifier="cairo_region_get_rectangle">
			<source-position filename="cairo.h" line="3296"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
				<parameter name="nth" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="rectangle" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_intersect" c:identifier="cairo_region_intersect">
			<source-position filename="cairo.h" line="3321"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_intersect_rectangle"
							c:identifier="cairo_region_intersect_rectangle">
			<source-position filename="cairo.h" line="3324"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="rectangle" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_is_empty" c:identifier="cairo_region_is_empty">
			<source-position filename="cairo.h" line="3301"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_num_rectangles"
							c:identifier="cairo_region_num_rectangles">
			<source-position filename="cairo.h" line="3293"/>
			<return-value transfer-ownership="none">
				<type name="gint" c:type="int"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_reference"
							c:identifier="cairo_region_reference"
							introspectable="0">
			<source-position filename="cairo.h" line="3277"/>
			<return-value>
				<type name="_region_t" c:type="cairo_region_t*"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_status" c:identifier="cairo_region_status">
			<source-position filename="cairo.h" line="3286"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_subtract" c:identifier="cairo_region_subtract">
			<source-position filename="cairo.h" line="3314"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_subtract_rectangle"
							c:identifier="cairo_region_subtract_rectangle">
			<source-position filename="cairo.h" line="3317"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="rectangle" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_translate" c:identifier="cairo_region_translate">
			<source-position filename="cairo.h" line="3311"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="region" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="dx" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="dy" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_union" c:identifier="cairo_region_union">
			<source-position filename="cairo.h" line="3328"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_union_rectangle"
							c:identifier="cairo_region_union_rectangle">
			<source-position filename="cairo.h" line="3331"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="rectangle" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_xor" c:identifier="cairo_region_xor">
			<source-position filename="cairo.h" line="3335"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="other" transfer-ownership="none">
					<type name="_region_t" c:type="const cairo_region_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="region_xor_rectangle"
							c:identifier="cairo_region_xor_rectangle">
			<source-position filename="cairo.h" line="3338"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="dst" transfer-ownership="none">
					<type name="_region_t" c:type="cairo_region_t*"/>
				</parameter>
				<parameter name="rectangle" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="rel_curve_to" c:identifier="cairo_rel_curve_to">
			<source-position filename="cairo.h" line="948"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="dx1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="dy1" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="dx2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="dy2" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="dx3" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="dy3" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="rel_line_to" c:identifier="cairo_rel_line_to">
			<source-position filename="cairo.h" line="945"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="dx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="dy" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="rel_move_to" c:identifier="cairo_rel_move_to">
			<source-position filename="cairo.h" line="942"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="dx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="dy" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="reset_clip" c:identifier="cairo_reset_clip">
			<source-position filename="cairo.h" line="1030"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="restore" c:identifier="cairo_restore">
			<source-position filename="cairo.h" line="565"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="rotate" c:identifier="cairo_rotate">
			<source-position filename="cairo.h" line="877"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="angle" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="save" c:identifier="cairo_save">
			<source-position filename="cairo.h" line="562"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scale" c:identifier="cairo_scale">
			<source-position filename="cairo.h" line="874"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="sx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="sy" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_create"
							c:identifier="cairo_scaled_font_create"
							introspectable="0">
			<source-position filename="cairo.h" line="1703"/>
			<return-value>
				<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="font_matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
				<parameter name="ctm" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_destroy"
							c:identifier="cairo_scaled_font_destroy">
			<source-position filename="cairo.h" line="1712"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_extents"
							c:identifier="cairo_scaled_font_extents">
			<source-position filename="cairo.h" line="1734"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_font_extents_t" c:type="cairo_font_extents_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_ctm"
							c:identifier="cairo_scaled_font_get_ctm">
			<source-position filename="cairo.h" line="1768"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="ctm" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_font_face"
							c:identifier="cairo_scaled_font_get_font_face"
							introspectable="0">
			<source-position filename="cairo.h" line="1761"/>
			<return-value>
				<type name="_font_face_t" c:type="cairo_font_face_t*"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_font_matrix"
							c:identifier="cairo_scaled_font_get_font_matrix">
			<source-position filename="cairo.h" line="1764"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="font_matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_font_options"
							c:identifier="cairo_scaled_font_get_font_options">
			<source-position filename="cairo.h" line="1776"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_reference_count"
							c:identifier="cairo_scaled_font_get_reference_count">
			<source-position filename="cairo.h" line="1715"/>
			<return-value transfer-ownership="none">
				<type name="guint" c:type="unsigned int"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_scale_matrix"
							c:identifier="cairo_scaled_font_get_scale_matrix">
			<source-position filename="cairo.h" line="1772"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="scale_matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_type"
							c:identifier="cairo_scaled_font_get_type">
			<source-position filename="cairo.h" line="1721"/>
			<return-value transfer-ownership="none">
				<type name="_font_type_t" c:type="cairo_font_type_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_get_user_data"
							c:identifier="cairo_scaled_font_get_user_data">
			<source-position filename="cairo.h" line="1724"/>
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_glyph_extents"
							c:identifier="cairo_scaled_font_glyph_extents">
			<source-position filename="cairo.h" line="1743"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="glyphs" transfer-ownership="none">
					<type name="_glyph_t" c:type="const cairo_glyph_t*"/>
				</parameter>
				<parameter name="num_glyphs" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_text_extents_t" c:type="cairo_text_extents_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_reference"
							c:identifier="cairo_scaled_font_reference"
							introspectable="0">
			<source-position filename="cairo.h" line="1709"/>
			<return-value>
				<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_set_user_data"
							c:identifier="cairo_scaled_font_set_user_data"
							introspectable="0">
			<source-position filename="cairo.h" line="1728"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
				<parameter name="user_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="destroy" transfer-ownership="none">
					<type name="destroy_func_t" c:type="cairo_destroy_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_status"
							c:identifier="cairo_scaled_font_status">
			<source-position filename="cairo.h" line="1718"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_text_extents"
							c:identifier="cairo_scaled_font_text_extents">
			<source-position filename="cairo.h" line="1738"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="utf8" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_text_extents_t" c:type="cairo_text_extents_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="scaled_font_text_to_glyphs"
							c:identifier="cairo_scaled_font_text_to_glyphs">
			<source-position filename="cairo.h" line="1749"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="utf8" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="utf8_len" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="glyphs" transfer-ownership="none">
					<type name="_glyph_t" c:type="cairo_glyph_t**"/>
				</parameter>
				<parameter name="num_glyphs" transfer-ownership="none">
					<type name="gint" c:type="int*"/>
				</parameter>
				<parameter name="clusters" transfer-ownership="none">
					<type name="_text_cluster_t" c:type="cairo_text_cluster_t**"/>
				</parameter>
				<parameter name="num_clusters" transfer-ownership="none">
					<type name="gint" c:type="int*"/>
				</parameter>
				<parameter name="cluster_flags" transfer-ownership="none">
					<type name="_text_cluster_flags_t"
								c:type="cairo_text_cluster_flags_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="select_font_face" c:identifier="cairo_select_font_face">
			<source-position filename="cairo.h" line="1549"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="family" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="slant" transfer-ownership="none">
					<type name="_font_slant_t" c:type="cairo_font_slant_t"/>
				</parameter>
				<parameter name="weight" transfer-ownership="none">
					<type name="_font_weight_t" c:type="cairo_font_weight_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_antialias" c:identifier="cairo_set_antialias">
			<source-position filename="cairo.h" line="773"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="antialias" transfer-ownership="none">
					<type name="_antialias_t" c:type="cairo_antialias_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_dash" c:identifier="cairo_set_dash">
			<source-position filename="cairo.h" line="862"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="dashes" transfer-ownership="none">
					<type name="gdouble" c:type="const double*"/>
				</parameter>
				<parameter name="num_dashes" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="offset" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_fill_rule" c:identifier="cairo_set_fill_rule">
			<source-position filename="cairo.h" line="808"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="fill_rule" transfer-ownership="none">
					<type name="_fill_rule_t" c:type="cairo_fill_rule_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_font_face" c:identifier="cairo_set_font_face">
			<source-position filename="cairo.h" line="1574"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_font_matrix" c:identifier="cairo_set_font_matrix">
			<source-position filename="cairo.h" line="1558"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_font_options" c:identifier="cairo_set_font_options">
			<source-position filename="cairo.h" line="1566"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="const cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_font_size" c:identifier="cairo_set_font_size">
			<source-position filename="cairo.h" line="1555"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="size" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_hairline" c:identifier="cairo_set_hairline">
			<source-position filename="cairo.h" line="814"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="set_hairline" transfer-ownership="none">
					<type name="_bool_t" c:type="cairo_bool_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_line_cap" c:identifier="cairo_set_line_cap">
			<source-position filename="cairo.h" line="835"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="line_cap" transfer-ownership="none">
					<type name="_line_cap_t" c:type="cairo_line_cap_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_line_join" c:identifier="cairo_set_line_join">
			<source-position filename="cairo.h" line="859"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="line_join" transfer-ownership="none">
					<type name="_line_join_t" c:type="cairo_line_join_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_line_width" c:identifier="cairo_set_line_width">
			<source-position filename="cairo.h" line="811"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_matrix" c:identifier="cairo_set_matrix">
			<source-position filename="cairo.h" line="884"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_miter_limit" c:identifier="cairo_set_miter_limit">
			<source-position filename="cairo.h" line="868"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="limit" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_operator" c:identifier="cairo_set_operator">
			<source-position filename="cairo.h" line="699"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="op" transfer-ownership="none">
					<type name="_operator_t" c:type="cairo_operator_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_scaled_font" c:identifier="cairo_set_scaled_font">
			<source-position filename="cairo.h" line="1580"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="const cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_source" c:identifier="cairo_set_source">
			<source-position filename="cairo.h" line="702"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="source" transfer-ownership="none">
					<type name="_pattern_t" c:type="cairo_pattern_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_source_rgb" c:identifier="cairo_set_source_rgb">
			<source-position filename="cairo.h" line="705"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_source_rgba" c:identifier="cairo_set_source_rgba">
			<source-position filename="cairo.h" line="708"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="red" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_source_surface"
							c:identifier="cairo_set_source_surface">
			<source-position filename="cairo.h" line="713"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_tolerance" c:identifier="cairo_set_tolerance">
			<source-position filename="cairo.h" line="719"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="tolerance" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="set_user_data"
							c:identifier="cairo_set_user_data"
							introspectable="0">
			<source-position filename="cairo.h" line="556"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
				<parameter name="user_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="destroy" transfer-ownership="none">
					<type name="destroy_func_t" c:type="cairo_destroy_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="show_glyphs" c:identifier="cairo_show_glyphs">
			<source-position filename="cairo.h" line="1590"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="glyphs" transfer-ownership="none">
					<type name="_glyph_t" c:type="const cairo_glyph_t*"/>
				</parameter>
				<parameter name="num_glyphs" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="show_page" c:identifier="cairo_show_page">
			<source-position filename="cairo.h" line="1005"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="show_text" c:identifier="cairo_show_text">
			<source-position filename="cairo.h" line="1587"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="utf8" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="show_text_glyphs" c:identifier="cairo_show_text_glyphs">
			<source-position filename="cairo.h" line="1593"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="utf8" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="utf8_len" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="glyphs" transfer-ownership="none">
					<type name="_glyph_t" c:type="const cairo_glyph_t*"/>
				</parameter>
				<parameter name="num_glyphs" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="clusters" transfer-ownership="none">
					<type name="_text_cluster_t" c:type="const cairo_text_cluster_t*"/>
				</parameter>
				<parameter name="num_clusters" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="cluster_flags" transfer-ownership="none">
					<type name="_text_cluster_flags_t"
								c:type="cairo_text_cluster_flags_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="status" c:identifier="cairo_status">
			<source-position filename="cairo.h" line="2267"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="status_to_string" c:identifier="cairo_status_to_string">
			<source-position filename="cairo.h" line="2270"/>
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const char*"/>
			</return-value>
			<parameters>
				<parameter name="status" transfer-ownership="none">
					<type name="_status_t" c:type="cairo_status_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="stroke" c:identifier="cairo_stroke">
			<source-position filename="cairo.h" line="990"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="stroke_extents" c:identifier="cairo_stroke_extents">
			<source-position filename="cairo.h" line="1019"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y1" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="x2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y2" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="stroke_preserve" c:identifier="cairo_stroke_preserve">
			<source-position filename="cairo.h" line="993"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_copy_page" c:identifier="cairo_surface_copy_page">
			<source-position filename="cairo.h" line="2699"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_create_for_rectangle"
							c:identifier="cairo_surface_create_for_rectangle"
							introspectable="0">
			<source-position filename="cairo.h" line="2379"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_create_observer"
							c:identifier="cairo_surface_create_observer"
							introspectable="0">
			<source-position filename="cairo.h" line="2400"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="target" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="mode" transfer-ownership="none">
					<type name="_surface_observer_mode_t"
								c:type="cairo_surface_observer_mode_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_create_similar"
							c:identifier="cairo_surface_create_similar"
							introspectable="0">
			<source-position filename="cairo.h" line="2359"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="other" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="content" transfer-ownership="none">
					<type name="_content_t" c:type="cairo_content_t"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_create_similar_image"
							c:identifier="cairo_surface_create_similar_image"
							introspectable="0">
			<source-position filename="cairo.h" line="2365"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="other" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="format" transfer-ownership="none">
					<type name="_format_t" c:type="cairo_format_t"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_destroy" c:identifier="cairo_surface_destroy">
			<source-position filename="cairo.h" line="2489"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_finish" c:identifier="cairo_surface_finish">
			<source-position filename="cairo.h" line="2486"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_flush" c:identifier="cairo_surface_flush">
			<source-position filename="cairo.h" line="2656"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_content"
							c:identifier="cairo_surface_get_content">
			<source-position filename="cairo.h" line="2595"/>
			<return-value transfer-ownership="none">
				<type name="_content_t" c:type="cairo_content_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_device"
							c:identifier="cairo_surface_get_device"
							introspectable="0">
			<source-position filename="cairo.h" line="2492"/>
			<return-value>
				<type name="_device_t" c:type="cairo_device_t*"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_device_offset"
							c:identifier="cairo_surface_get_device_offset">
			<source-position filename="cairo.h" line="2684"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x_offset" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y_offset" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_device_scale"
							c:identifier="cairo_surface_get_device_scale">
			<source-position filename="cairo.h" line="2674"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x_scale" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y_scale" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_fallback_resolution"
							c:identifier="cairo_surface_get_fallback_resolution">
			<source-position filename="cairo.h" line="2694"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x_pixels_per_inch" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y_pixels_per_inch" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_font_options"
							c:identifier="cairo_surface_get_font_options">
			<source-position filename="cairo.h" line="2652"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="options" transfer-ownership="none">
					<type name="_font_options_t" c:type="cairo_font_options_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_mime_data"
							c:identifier="cairo_surface_get_mime_data">
			<source-position filename="cairo.h" line="2634"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="mime_type" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="guint8" c:type="const unsigned char**"/>
				</parameter>
				<parameter name="length" transfer-ownership="none">
					<type name="gulong" c:type="unsigned long*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_reference_count"
							c:identifier="cairo_surface_get_reference_count">
			<source-position filename="cairo.h" line="2495"/>
			<return-value transfer-ownership="none">
				<type name="guint" c:type="unsigned int"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_type" c:identifier="cairo_surface_get_type">
			<source-position filename="cairo.h" line="2592"/>
			<return-value transfer-ownership="none">
				<type name="_surface_type_t" c:type="cairo_surface_type_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_get_user_data"
							c:identifier="cairo_surface_get_user_data">
			<source-position filename="cairo.h" line="2611"/>
			<return-value transfer-ownership="none" nullable="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_has_show_text_glyphs"
							c:identifier="cairo_surface_has_show_text_glyphs">
			<source-position filename="cairo.h" line="2705"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_map_to_image"
							c:identifier="cairo_surface_map_to_image"
							introspectable="0">
			<source-position filename="cairo.h" line="2371"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_rectangle_int_t" c:type="const cairo_rectangle_int_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_mark_dirty"
							c:identifier="cairo_surface_mark_dirty">
			<source-position filename="cairo.h" line="2659"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_mark_dirty_rectangle"
							c:identifier="cairo_surface_mark_dirty_rectangle">
			<source-position filename="cairo.h" line="2662"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="width" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="height" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_add_fill_callback"
							c:identifier="cairo_surface_observer_add_fill_callback"
							introspectable="0">
			<source-position filename="cairo.h" line="2428"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2">
					<type name="surface_observer_callback_t"
								c:type="cairo_surface_observer_callback_t"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_add_finish_callback"
							c:identifier="cairo_surface_observer_add_finish_callback"
							introspectable="0">
			<source-position filename="cairo.h" line="2448"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2">
					<type name="surface_observer_callback_t"
								c:type="cairo_surface_observer_callback_t"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_add_flush_callback"
							c:identifier="cairo_surface_observer_add_flush_callback"
							introspectable="0">
			<source-position filename="cairo.h" line="2443"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2">
					<type name="surface_observer_callback_t"
								c:type="cairo_surface_observer_callback_t"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_add_glyphs_callback"
							c:identifier="cairo_surface_observer_add_glyphs_callback"
							introspectable="0">
			<source-position filename="cairo.h" line="2438"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2">
					<type name="surface_observer_callback_t"
								c:type="cairo_surface_observer_callback_t"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_add_mask_callback"
							c:identifier="cairo_surface_observer_add_mask_callback"
							introspectable="0">
			<source-position filename="cairo.h" line="2423"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2">
					<type name="surface_observer_callback_t"
								c:type="cairo_surface_observer_callback_t"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_add_paint_callback"
							c:identifier="cairo_surface_observer_add_paint_callback"
							introspectable="0">
			<source-position filename="cairo.h" line="2418"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2">
					<type name="surface_observer_callback_t"
								c:type="cairo_surface_observer_callback_t"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_add_stroke_callback"
							c:identifier="cairo_surface_observer_add_stroke_callback"
							introspectable="0">
			<source-position filename="cairo.h" line="2433"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="func" transfer-ownership="none" closure="2">
					<type name="surface_observer_callback_t"
								c:type="cairo_surface_observer_callback_t"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<callback name="surface_observer_callback_t"
							c:type="cairo_surface_observer_callback_t"
							version="1.12">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="2403">A generic callback function for surface operations.</doc>
			<source-position filename="cairo.h" line="2413"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="observer" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2405">the #cairo_surface_observer_t</doc>
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="target" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2406">the observed surface</doc>
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="2407">closure used when adding the callback</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<function name="surface_observer_elapsed"
							c:identifier="cairo_surface_observer_elapsed">
			<source-position filename="cairo.h" line="2457"/>
			<return-value transfer-ownership="none">
				<type name="gdouble" c:type="double"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_observer_print"
							c:identifier="cairo_surface_observer_print"
							introspectable="0">
			<source-position filename="cairo.h" line="2453"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="abstract_surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="write_func" transfer-ownership="none">
					<type name="write_func_t" c:type="cairo_write_func_t"/>
				</parameter>
				<parameter name="closure"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_reference"
							c:identifier="cairo_surface_reference"
							introspectable="0">
			<source-position filename="cairo.h" line="2483"/>
			<return-value>
				<type name="_surface_t" c:type="cairo_surface_t*"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_set_device_offset"
							c:identifier="cairo_surface_set_device_offset">
			<source-position filename="cairo.h" line="2679"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x_offset" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y_offset" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_set_device_scale"
							c:identifier="cairo_surface_set_device_scale">
			<source-position filename="cairo.h" line="2669"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x_scale" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y_scale" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_set_fallback_resolution"
							c:identifier="cairo_surface_set_fallback_resolution">
			<source-position filename="cairo.h" line="2689"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="x_pixels_per_inch" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="y_pixels_per_inch" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_set_mime_data"
							c:identifier="cairo_surface_set_mime_data"
							introspectable="0">
			<source-position filename="cairo.h" line="2640"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="mime_type" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="guint8" c:type="const unsigned char*"/>
				</parameter>
				<parameter name="length" transfer-ownership="none">
					<type name="gulong" c:type="unsigned long"/>
				</parameter>
				<parameter name="destroy" transfer-ownership="none">
					<type name="destroy_func_t" c:type="cairo_destroy_func_t"/>
				</parameter>
				<parameter name="closure"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_set_user_data"
							c:identifier="cairo_surface_set_user_data"
							introspectable="0">
			<source-position filename="cairo.h" line="2615"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="key" transfer-ownership="none">
					<type name="_user_data_key_t" c:type="const cairo_user_data_key_t*"/>
				</parameter>
				<parameter name="user_data"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="destroy" transfer-ownership="none">
					<type name="destroy_func_t" c:type="cairo_destroy_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_show_page" c:identifier="cairo_surface_show_page">
			<source-position filename="cairo.h" line="2702"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_status" c:identifier="cairo_surface_status">
			<source-position filename="cairo.h" line="2498"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_supports_mime_type"
							c:identifier="cairo_surface_supports_mime_type">
			<source-position filename="cairo.h" line="2648"/>
			<return-value transfer-ownership="none">
				<type name="_bool_t" c:type="cairo_bool_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="mime_type" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_unmap_image"
							c:identifier="cairo_surface_unmap_image">
			<source-position filename="cairo.h" line="2375"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="image" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_write_to_png"
							c:identifier="cairo_surface_write_to_png">
			<source-position filename="cairo.h" line="2600"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="filename" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="surface_write_to_png_stream"
							c:identifier="cairo_surface_write_to_png_stream"
							introspectable="0">
			<source-position filename="cairo.h" line="2604"/>
			<return-value transfer-ownership="none">
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="surface" transfer-ownership="none">
					<type name="_surface_t" c:type="cairo_surface_t*"/>
				</parameter>
				<parameter name="write_func" transfer-ownership="none">
					<type name="write_func_t" c:type="cairo_write_func_t"/>
				</parameter>
				<parameter name="closure"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</function>
		<function name="tag_begin" c:identifier="cairo_tag_begin">
			<source-position filename="cairo.h" line="1089"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="tag_name" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="attributes" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="tag_end" c:identifier="cairo_tag_end">
			<source-position filename="cairo.h" line="1092"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="tag_name" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="text_cluster_allocate"
							c:identifier="cairo_text_cluster_allocate"
							introspectable="0">
			<source-position filename="cairo.h" line="1200"/>
			<return-value>
				<type name="_text_cluster_t" c:type="cairo_text_cluster_t*"/>
			</return-value>
			<parameters>
				<parameter name="num_clusters" transfer-ownership="none">
					<type name="gint" c:type="int"/>
				</parameter>
			</parameters>
		</function>
		<function name="text_cluster_free" c:identifier="cairo_text_cluster_free">
			<source-position filename="cairo.h" line="1203"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="clusters" transfer-ownership="none">
					<type name="_text_cluster_t" c:type="cairo_text_cluster_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="text_extents" c:identifier="cairo_text_extents">
			<source-position filename="cairo.h" line="1609"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="utf8" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<type name="_text_extents_t" c:type="cairo_text_extents_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="text_path" c:identifier="cairo_text_path">
			<source-position filename="cairo.h" line="1603"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="utf8" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
		</function>
		<function name="toy_font_face_create"
							c:identifier="cairo_toy_font_face_create"
							introspectable="0">
			<source-position filename="cairo.h" line="1783"/>
			<return-value>
				<type name="_font_face_t" c:type="cairo_font_face_t*"/>
			</return-value>
			<parameters>
				<parameter name="family" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="slant" transfer-ownership="none">
					<type name="_font_slant_t" c:type="cairo_font_slant_t"/>
				</parameter>
				<parameter name="weight" transfer-ownership="none">
					<type name="_font_weight_t" c:type="cairo_font_weight_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="toy_font_face_get_family"
							c:identifier="cairo_toy_font_face_get_family">
			<source-position filename="cairo.h" line="1788"/>
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const char*"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="toy_font_face_get_slant"
							c:identifier="cairo_toy_font_face_get_slant">
			<source-position filename="cairo.h" line="1791"/>
			<return-value transfer-ownership="none">
				<type name="_font_slant_t" c:type="cairo_font_slant_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="toy_font_face_get_weight"
							c:identifier="cairo_toy_font_face_get_weight">
			<source-position filename="cairo.h" line="1794"/>
			<return-value transfer-ownership="none">
				<type name="_font_weight_t" c:type="cairo_font_weight_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="transform" c:identifier="cairo_transform">
			<source-position filename="cairo.h" line="880"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="matrix" transfer-ownership="none">
					<type name="_matrix_t" c:type="const cairo_matrix_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="translate" c:identifier="cairo_translate">
			<source-position filename="cairo.h" line="871"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="tx" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
				<parameter name="ty" transfer-ownership="none">
					<type name="gdouble" c:type="double"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_create"
							c:identifier="cairo_user_font_face_create"
							introspectable="0">
			<source-position filename="cairo.h" line="1800"/>
			<return-value>
				<type name="_font_face_t" c:type="cairo_font_face_t*"/>
			</return-value>
		</function>
		<function name="user_font_face_get_init_func"
							c:identifier="cairo_user_font_face_get_init_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2052"/>
			<return-value>
				<type name="user_scaled_font_init_func_t"
							c:type="cairo_user_scaled_font_init_func_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_get_render_color_glyph_func"
							c:identifier="cairo_user_font_face_get_render_color_glyph_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2058"/>
			<return-value>
				<type name="user_scaled_font_render_glyph_func_t"
							c:type="cairo_user_scaled_font_render_glyph_func_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_get_render_glyph_func"
							c:identifier="cairo_user_font_face_get_render_glyph_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2055"/>
			<return-value>
				<type name="user_scaled_font_render_glyph_func_t"
							c:type="cairo_user_scaled_font_render_glyph_func_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_get_text_to_glyphs_func"
							c:identifier="cairo_user_font_face_get_text_to_glyphs_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2061"/>
			<return-value>
				<type name="user_scaled_font_text_to_glyphs_func_t"
							c:type="cairo_user_scaled_font_text_to_glyphs_func_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_get_unicode_to_glyph_func"
							c:identifier="cairo_user_font_face_get_unicode_to_glyph_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2064"/>
			<return-value>
				<type name="user_scaled_font_unicode_to_glyph_func_t"
							c:type="cairo_user_scaled_font_unicode_to_glyph_func_t"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_set_init_func"
							c:identifier="cairo_user_font_face_set_init_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2030"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="init_func" transfer-ownership="none">
					<type name="user_scaled_font_init_func_t"
								c:type="cairo_user_scaled_font_init_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_set_render_color_glyph_func"
							c:identifier="cairo_user_font_face_set_render_color_glyph_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2038"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="render_glyph_func" transfer-ownership="none">
					<type name="user_scaled_font_render_glyph_func_t"
								c:type="cairo_user_scaled_font_render_glyph_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_set_render_glyph_func"
							c:identifier="cairo_user_font_face_set_render_glyph_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2034"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="render_glyph_func" transfer-ownership="none">
					<type name="user_scaled_font_render_glyph_func_t"
								c:type="cairo_user_scaled_font_render_glyph_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_set_text_to_glyphs_func"
							c:identifier="cairo_user_font_face_set_text_to_glyphs_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2042"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="text_to_glyphs_func" transfer-ownership="none">
					<type name="user_scaled_font_text_to_glyphs_func_t"
								c:type="cairo_user_scaled_font_text_to_glyphs_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_font_face_set_unicode_to_glyph_func"
							c:identifier="cairo_user_font_face_set_unicode_to_glyph_func"
							introspectable="0">
			<source-position filename="cairo.h" line="2046"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="font_face" transfer-ownership="none">
					<type name="_font_face_t" c:type="cairo_font_face_t*"/>
				</parameter>
				<parameter name="unicode_to_glyph_func" transfer-ownership="none">
					<type name="user_scaled_font_unicode_to_glyph_func_t"
								c:type="cairo_user_scaled_font_unicode_to_glyph_func_t"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_scaled_font_get_foreground_marker"
							c:identifier="cairo_user_scaled_font_get_foreground_marker"
							introspectable="0">
			<source-position filename="cairo.h" line="2067"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_scaled_font_get_foreground_source"
							c:identifier="cairo_user_scaled_font_get_foreground_source"
							introspectable="0">
			<source-position filename="cairo.h" line="2070"/>
			<return-value>
				<type name="_pattern_t" c:type="cairo_pattern_t*"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
			</parameters>
		</function>
		<callback name="user_scaled_font_init_func_t"
							c:type="cairo_user_scaled_font_init_func_t"
							version="1.8">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1804">#cairo_user_scaled_font_init_func_t is the type of function which is
called when a scaled-font needs to be created for a user font-face.

The cairo context @cr is not used by the caller, but is prepared in font
space, similar to what the cairo contexts passed to the render_glyph
method will look like.  The callback can use this context for extents
computation for example.  After the callback is called, @cr is checked
for any error status.

The @extents argument is where the user font sets the font extents for
@scaled_font.  It is in font space, which means that for most cases its
ascent and descent members should add to 1.0.  @extents is preset to
hold a value of 1.0 for ascent, height, and max_x_advance, and 0.0 for
descent and max_y_advance members.

The callback is optional.  If not set, default font extents as described
in the previous paragraph will be used.

Note that @scaled_font is not fully initialized at this
point and trying to use it for text operations in the callback will result
in deadlock.</doc>
			<source-position filename="cairo.h" line="1836"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1832">%CAIRO_STATUS_SUCCESS upon success, or an error status on error.</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1806">the scaled-font being created</doc>
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="cr" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1807">a cairo context, in font space</doc>
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1808">font extents to fill in, in font space</doc>
					<type name="_font_extents_t" c:type="cairo_font_extents_t*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="user_scaled_font_render_glyph_func_t"
							c:type="cairo_user_scaled_font_render_glyph_func_t"
							version="1.8">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1840">#cairo_user_scaled_font_render_glyph_func_t is the type of function which
is called when a user scaled-font needs to render a glyph.

The callback is mandatory, and expected to draw the glyph with code @glyph to
the cairo context @cr.  @cr is prepared such that the glyph drawing is done in
font space.  That is, the matrix set on @cr is the scale matrix of @scaled_font.
The @extents argument is where the user font sets the font extents for
@scaled_font.  However, if user prefers to draw in user space, they can
achieve that by changing the matrix on @cr.

All cairo rendering operations to @cr are permitted. However, when
this callback is set with
cairo_user_font_face_set_render_glyph_func(), the result is
undefined if any source other than the default source on @cr is
used.  That means, glyph bitmaps should be rendered using
cairo_mask() instead of cairo_paint().

When this callback is set with
cairo_user_font_face_set_render_color_glyph_func(), the default
source is black. Setting the source is a valid
operation. cairo_user_scaled_font_get_foreground_marker() or
cairo_user_scaled_font_get_foreground_source() may be called to
obtain the current source at the time the glyph is rendered.

Other non-default settings on @cr include a font size of 1.0 (given that
it is set up to be in font space), and font options corresponding to
@scaled_font.

The @extents argument is preset to have &lt;literal&gt;x_bearing&lt;/literal&gt;,
&lt;literal&gt;width&lt;/literal&gt;, and &lt;literal&gt;y_advance&lt;/literal&gt; of zero,
&lt;literal&gt;y_bearing&lt;/literal&gt; set to &lt;literal&gt;-font_extents.ascent&lt;/literal&gt;,
&lt;literal&gt;height&lt;/literal&gt; to &lt;literal&gt;font_extents.ascent+font_extents.descent&lt;/literal&gt;,
and &lt;literal&gt;x_advance&lt;/literal&gt; to &lt;literal&gt;font_extents.max_x_advance&lt;/literal&gt;.
The only field user needs to set in majority of cases is
&lt;literal&gt;x_advance&lt;/literal&gt;.
If the &lt;literal&gt;width&lt;/literal&gt; field is zero upon the callback returning
(which is its preset value), the glyph extents are automatically computed
based on the drawings done to @cr.  This is in most cases exactly what the
desired behavior is.  However, if for any reason the callback sets the
extents, it must be ink extents, and include the extents of all drawing
done to @cr in the callback.

Where both color and non-color callbacks has been set using
cairo_user_font_face_set_render_color_glyph_func(), and
cairo_user_font_face_set_render_glyph_func(), the color glyph
callback will be called first. If the color glyph callback returns
%CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED, any drawing operations are
discarded and the non-color callback will be called. This is the
only case in which the %CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED may
be returned from a render callback. This fallback sequence allows a
user font face to contain a combination of both color and non-color
glyphs.</doc>
			<source-position filename="cairo.h" line="1906"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1900">%CAIRO_STATUS_SUCCESS upon success,
%CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED if fallback options should be tried,
or %CAIRO_STATUS_USER_FONT_ERROR or any other error status on error.</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1842">user scaled-font</doc>
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="glyph" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1843">glyph code to render</doc>
					<type name="gulong" c:type="unsigned long"/>
				</parameter>
				<parameter name="cr" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1844">cairo context to draw to, in font space</doc>
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="extents" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1845">glyph extents to fill in, in font space</doc>
					<type name="_text_extents_t" c:type="cairo_text_extents_t*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="user_scaled_font_text_to_glyphs_func_t"
							c:type="cairo_user_scaled_font_text_to_glyphs_func_t"
							version="1.8">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1911">#cairo_user_scaled_font_text_to_glyphs_func_t is the type of function which
is called to convert input text to an array of glyphs.  This is used by the
cairo_show_text() operation.

Using this callback the user-font has full control on glyphs and their
positions.  That means, it allows for features like ligatures and kerning,
as well as complex &lt;firstterm&gt;shaping&lt;/firstterm&gt; required for scripts like
Arabic and Indic.

The @num_glyphs argument is preset to the number of glyph entries available
in the @glyphs buffer. If the @glyphs buffer is %NULL, the value of
@num_glyphs will be zero.  If the provided glyph array is too short for
the conversion (or for convenience), a new glyph array may be allocated
using cairo_glyph_allocate() and placed in @glyphs.  Upon return,
@num_glyphs should contain the number of generated glyphs.  If the value
@glyphs points at has changed after the call, the caller will free the
allocated glyph array using cairo_glyph_free().  The caller will also free
the original value of @glyphs, so the callback shouldn't do so.
The callback should populate the glyph indices and positions (in font space)
assuming that the text is to be shown at the origin.

If @clusters is not %NULL, @num_clusters and @cluster_flags are also
non-%NULL, and cluster mapping should be computed. The semantics of how
cluster array allocation works is similar to the glyph array.  That is,
if @clusters initially points to a non-%NULL value, that array may be used
as a cluster buffer, and @num_clusters points to the number of cluster
entries available there.  If the provided cluster array is too short for
the conversion (or for convenience), a new cluster array may be allocated
using cairo_text_cluster_allocate() and placed in @clusters.  In this case,
the original value of @clusters will still be freed by the caller.  Upon
return, @num_clusters should contain the number of generated clusters.
If the value @clusters points at has changed after the call, the caller
will free the allocated cluster array using cairo_text_cluster_free().

The callback is optional.  If @num_glyphs is negative upon
the callback returning or if the return value
is %CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED, the unicode_to_glyph callback
is tried.  See #cairo_user_scaled_font_unicode_to_glyph_func_t.

Note: While cairo does not impose any limitation on glyph indices,
some applications may assume that a glyph index fits in a 16-bit
unsigned integer.  As such, it is advised that user-fonts keep their
glyphs in the 0 to 65535 range.  Furthermore, some applications may
assume that glyph 0 is a special glyph-not-found glyph.  User-fonts
are advised to use glyph 0 for such purposes and do not use that
glyph value for other purposes.</doc>
			<source-position filename="cairo.h" line="1976"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="1970">%CAIRO_STATUS_SUCCESS upon success,
%CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED if fallback options should be tried,
or %CAIRO_STATUS_USER_FONT_ERROR or any other error status on error.</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1913">the scaled-font being created</doc>
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="utf8" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1914">a string of text encoded in UTF-8</doc>
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="utf8_len" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1915">length of @utf8 in bytes</doc>
					<type name="gint" c:type="int"/>
				</parameter>
				<parameter name="glyphs" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1916">pointer to array of glyphs to fill, in font space</doc>
					<type name="_glyph_t" c:type="cairo_glyph_t**"/>
				</parameter>
				<parameter name="num_glyphs" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1917">pointer to number of glyphs</doc>
					<type name="gint" c:type="int*"/>
				</parameter>
				<parameter name="clusters" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1918">pointer to array of cluster mapping information to fill, or %NULL</doc>
					<type name="_text_cluster_t" c:type="cairo_text_cluster_t**"/>
				</parameter>
				<parameter name="num_clusters" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1919">pointer to number of clusters</doc>
					<type name="gint" c:type="int*"/>
				</parameter>
				<parameter name="cluster_flags" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1920">pointer to location to store cluster flags corresponding to the
								output @clusters</doc>
					<type name="_text_cluster_flags_t"
								c:type="cairo_text_cluster_flags_t*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="user_scaled_font_unicode_to_glyph_func_t"
							c:type="cairo_user_scaled_font_unicode_to_glyph_func_t"
							version="1.8">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="1985">#cairo_user_scaled_font_unicode_to_glyph_func_t is the type of function which
is called to convert an input Unicode character to a single glyph.
This is used by the cairo_show_text() operation.

This callback is used to provide the same functionality as the
text_to_glyphs callback does (see #cairo_user_scaled_font_text_to_glyphs_func_t)
but has much less control on the output,
in exchange for increased ease of use.  The inherent assumption to using
this callback is that each character maps to one glyph, and that the
mapping is context independent.  It also assumes that glyphs are positioned
according to their advance width.  These mean no ligatures, kerning, or
complex scripts can be implemented using this callback.

The callback is optional, and only used if text_to_glyphs callback is not
set or fails to return glyphs.  If this callback is not set or if it returns
%CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED, an identity mapping from Unicode
code-points to glyph indices is assumed.

Note: While cairo does not impose any limitation on glyph indices,
some applications may assume that a glyph index fits in a 16-bit
unsigned integer.  As such, it is advised that user-fonts keep their
glyphs in the 0 to 65535 range.  Furthermore, some applications may
assume that glyph 0 is a special glyph-not-found glyph.  User-fonts
are advised to use glyph 0 for such purposes and do not use that
glyph value for other purposes.</doc>
			<source-position filename="cairo.h" line="2023"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="2017">%CAIRO_STATUS_SUCCESS upon success,
%CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED if fallback options should be tried,
or %CAIRO_STATUS_USER_FONT_ERROR or any other error status on error.</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="scaled_font" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1987">the scaled-font being created</doc>
					<type name="_scaled_font_t" c:type="cairo_scaled_font_t*"/>
				</parameter>
				<parameter name="unicode" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1988">input unicode character code-point</doc>
					<type name="gulong" c:type="unsigned long"/>
				</parameter>
				<parameter name="glyph_index" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="1989">output glyph index</doc>
					<type name="gulong" c:type="unsigned long*"/>
				</parameter>
			</parameters>
		</callback>
		<function name="user_to_device" c:identifier="cairo_user_to_device">
			<source-position filename="cairo.h" line="891"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="user_to_device_distance"
							c:identifier="cairo_user_to_device_distance">
			<source-position filename="cairo.h" line="894"/>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="cr" transfer-ownership="none">
					<type name="_t" c:type="cairo_t*"/>
				</parameter>
				<parameter name="dx" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
				<parameter name="dy" transfer-ownership="none">
					<type name="gdouble" c:type="double*"/>
				</parameter>
			</parameters>
		</function>
		<function name="version" c:identifier="cairo_version">
			<source-position filename="cairo.h" line="97"/>
			<return-value transfer-ownership="none">
				<type name="gint" c:type="int"/>
			</return-value>
		</function>
		<function name="version_string" c:identifier="cairo_version_string">
			<source-position filename="cairo.h" line="100"/>
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const char*"/>
			</return-value>
		</function>
		<callback name="write_func_t" c:type="cairo_write_func_t" version="1.0">
			<doc xml:space="preserve"
					 filename="cairo.h"
					 line="476">#cairo_write_func_t is the type of function which is called when a
backend needs to write data to an output stream.  It is passed the
closure which was specified by the user at the time the write
function was registered, the data to write and the length of the
data in bytes.  The write function should return
%CAIRO_STATUS_SUCCESS if all the data was successfully written,
%CAIRO_STATUS_WRITE_ERROR otherwise.</doc>
			<source-position filename="cairo.h" line="494"/>
			<return-value transfer-ownership="none">
				<doc xml:space="preserve"
						 filename="cairo.h"
						 line="490">the status code of the write operation</doc>
				<type name="_status_t" c:type="cairo_status_t"/>
			</return-value>
			<parameters>
				<parameter name="closure"
									 transfer-ownership="none"
									 nullable="1"
									 allow-none="1">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="478">the output closure</doc>
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="479">the buffer containing the data to write</doc>
					<type name="guint8" c:type="const unsigned char*"/>
				</parameter>
				<parameter name="length" transfer-ownership="none">
					<doc xml:space="preserve"
							 filename="cairo.h"
							 line="480">the amount of data to write</doc>
					<type name="guint" c:type="unsigned int"/>
				</parameter>
			</parameters>
		</callback>
	</namespace>
</repository>
g-ir-scanner: cairo: warning: 92 warnings suppressed (use --warn-all to see them)
